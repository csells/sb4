<!-- Published by Fog Creek Software CityDesk MAYOWDQEAUJJTIIX/EB053B17/54 -->
<html>
<head>
	<title>What's the best way to maintain an .ini file in a C# Winforms app?</title>
</head>
<body>

		    
<b>Q. I have a C# Winforms application which uses the .config file for application settings, etc. I’d like to programmatically maintain various settings in this file, but there's no API like the old VB6 "GetPrivateProfileString." One of my co-workers said it's now preferred to use the registry and not .ini files. How do you suggest I handle this? </b>
<p>
<i>Asked by Anne Brumme. Answered by the Wonk on January 30, 2003</i>
<P style="MARGIN-RIGHT: 0px">
		 </P>
		  
		<p style="MARGIN-RIGHT: 0px"><b>A.</b> <P>.ini files provided a simple way to keep per-application settings. However, when Windows got multi-user support, per-application settings weren't enough, we also needed per-user settings. At the same time that Windows started supporting multiple users, it also provided the Registry for both per-application and per-user settings.</P>
<P>However, recently the Registry has fallen out of favor, mostly due to problems with corruption and an editor that puts every application-specific setting at risk. Towards that end, .NET provides two new mechanisms for dealing with settings, .config files and isolated storage.</P>
<P class=HD style="MARGIN: 0.25in 0in 4pt"><STRONG>.config Files</STRONG></P>
<P class=Body style="MARGIN: 0in 0in 0pt">As a read-only, per-application replacement for .ini files, .NET provides <I style="mso-bidi-font-style: normal">.config files</I>. A .config file is a file placed in the same folder as the application and named just like the application, except for a .config extension. For example, the .config file associated with foo.exe would be named foo.exe.config. .NET itself uses .config files for all kinds of CLR kinds of things, like how to resolve assemblies and versioning. You can add a new .config file to your VS.NET project by right clicking on the project in the Solution Explorer and choosing Add-&gt;Add New Item-&gt;Text File and naming the file “app.config” (no quotes). This will add an empty .config file to your project and, when your project is built, copy and rename the app.config file to the output folder along side your application. A minimal .config file looks like this:</P>
<P class=Body style="MARGIN: 0in 0in 0pt"><?xml:namespace prefix = o ns = "urn:schemas-microsoft-com:office:office" /><o:p>&nbsp;</o:p></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><FONT size=2><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'">&lt;</SPAN><SPAN style="COLOR: maroon; FONT-FAMILY: 'Courier New'">configuration</SPAN><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'">&gt;<o:p></o:p></SPAN></FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><FONT size=2><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'">&lt;/</SPAN><SPAN style="COLOR: maroon; FONT-FAMILY: 'Courier New'">configuration</SPAN><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'">&gt;<o:p></o:p></SPAN></FONT></P>
<P class=Body style="MARGIN: 0in 0in 0pt"><o:p>&nbsp;</o:p></P>
<P class=Body style="MARGIN: 0in 0in 0pt">In addition to the CLR-specific settings, .config files can be extended with custom XML sections as designated with uniquely named elements. By convention, the custom section is usually represented with an XML element named appSettings. For example, the following .config file contains a custom value for pi (in case the 20 digits provided by System.Math.Pi just isn’t enough):</P>
<P class=Body style="MARGIN: 0in 0in 0pt"><o:p>&nbsp;</o:p></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><FONT size=2><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'">&lt;</SPAN><SPAN style="COLOR: maroon; FONT-FAMILY: 'Courier New'">configuration</SPAN><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'">&gt;<o:p></o:p></SPAN></FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">&lt;</SPAN><SPAN style="COLOR: maroon">appSettings</SPAN><SPAN style="COLOR: blue">&gt;<o:p></o:p></SPAN></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: blue">&lt;</SPAN><SPAN style="COLOR: maroon">add</SPAN><SPAN style="COLOR: fuchsia"> </SPAN><SPAN style="COLOR: red">key</SPAN><SPAN style="COLOR: blue">="pi"</SPAN><SPAN style="COLOR: fuchsia"> </SPAN><SPAN style="COLOR: red">value</SPAN><SPAN style="COLOR: blue">="3.141592653589793238462"</SPAN><SPAN style="COLOR: fuchsia"> </SPAN><SPAN style="COLOR: blue">/&gt;<o:p></o:p></SPAN></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">&lt;/</SPAN><SPAN style="COLOR: maroon">appSettings</SPAN><SPAN style="COLOR: blue">&gt;<o:p></o:p></SPAN></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><FONT size=2><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'">&lt;/</SPAN><SPAN style="COLOR: maroon; FONT-FAMILY: 'Courier New'">configuration</SPAN><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'">&gt;<o:p></o:p></SPAN></FONT></P>
<P class=Body style="MARGIN: 0in 0in 0pt"><o:p>&nbsp;</o:p></P>
<P class=Body style="MARGIN: 0in 0in 0pt">Each .config section has a specific <I style="mso-bidi-font-style: normal">section reader</I> that knows how to read values from that section. These section readers can be defined in an application’s .config file or in the system-wide machine.config, a shown here for the appSettings section reader:</P>
<P class=Body style="MARGIN: 0in 0in 0pt"><o:p>&nbsp;</o:p></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><FONT size=2><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'">&lt;</SPAN><SPAN style="COLOR: maroon; FONT-FAMILY: 'Courier New'">configuration</SPAN><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'">&gt;<o:p></o:p></SPAN></FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">&lt;</SPAN><SPAN style="COLOR: maroon">configSections</SPAN><SPAN style="COLOR: blue">&gt;<o:p></o:p></SPAN></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>...<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: blue">&lt;</SPAN><SPAN style="COLOR: maroon">section</SPAN><SPAN style="COLOR: fuchsia"><o:p></o:p></SPAN></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><FONT size=2><SPAN style="COLOR: fuchsia; FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN></SPAN><SPAN style="COLOR: red; FONT-FAMILY: 'Courier New'">name</SPAN><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'">="appSettings"</SPAN><SPAN style="COLOR: fuchsia; FONT-FAMILY: 'Courier New'"><o:p></o:p></SPAN></FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><FONT size=2><SPAN style="COLOR: fuchsia; FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN></SPAN><SPAN style="COLOR: red; FONT-FAMILY: 'Courier New'">type</SPAN><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'">="System.Configuration.NameValueFileSectionHandler, ..."</SPAN><SPAN style="COLOR: fuchsia; FONT-FAMILY: 'Courier New'"> </SPAN><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'">/&gt;<o:p></o:p></SPAN></FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>...<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><FONT size=2><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>&lt;/</SPAN><SPAN style="COLOR: maroon; FONT-FAMILY: 'Courier New'">configSections</SPAN><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'">&gt;<o:p></o:p></SPAN></FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>...<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><FONT size=2><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'">&lt;/</SPAN><SPAN style="COLOR: maroon; FONT-FAMILY: 'Courier New'">configuration</SPAN><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'">&gt;<o:p></o:p></SPAN></FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><o:p></o:p></FONT></SPAN></P>
<P class=Body style="MARGIN: 0in 0in 0pt">A section reader is a class that implements IConfigurationSectionHandler and is registered with an entry in the configSections section of a .config file. The NameValueFileSectionHandler implementation knows how to read a section in the appSettings format and return a NameValueCollection from the System.Collections.Specialized namespace. However, instead of creating a NameValueFileSectionHandler implementation yourself, you’re better off to use the ConfigurationsSettings class (from the System.Configuration namespace) to map the name of the section to a section reader for you, putting out the NameValueCollection from the result, like so:</P>
<P class=Body style="MARGIN: 0in 0in 0pt"><o:p>&nbsp;</o:p></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><FONT size=2><B style="mso-bidi-font-weight: normal"><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'">using</SPAN></B><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'"> <SPAN style="COLOR: black">System</SPAN>.<SPAN style="COLOR: black">Configuration</SPAN>;<o:p></o:p></SPAN></B></FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><FONT size=2><B style="mso-bidi-font-weight: normal"><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'">using</SPAN></B><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'"> <SPAN style="COLOR: black">System</SPAN>.<SPAN style="COLOR: black">Collections</SPAN>.<SPAN style="COLOR: black">Specialized</SPAN>;<o:p></o:p></SPAN></B></FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'"><FONT size=2>...<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><FONT size=2><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'">static</SPAN><SPAN style="FONT-FAMILY: 'Courier New'"> <SPAN style="COLOR: blue">void</SPAN> </SPAN><?xml:namespace prefix = st1 ns = "urn:schemas-microsoft-com:office:smarttags" /><st1:place><SPAN style="COLOR: black"><SPAN style="FONT-FAMILY: 'Courier New'">Main</SPAN></SPAN></st1:place><SPAN style="FONT-FAMILY: 'Courier New'">() {<o:p></o:p></SPAN></FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><FONT size=2><B style="mso-bidi-font-weight: normal"><SPAN style="COLOR: black; FONT-FAMILY: 'Courier New'">NameValueCollection</SPAN></B><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'"> <SPAN style="COLOR: black">settings</SPAN> =<o:p></o:p></SPAN></B></FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'"><FONT size=2>(<SPAN style="COLOR: black">NameValueCollection</SPAN>)<SPAN style="COLOR: black">ConfigurationSettings</SPAN>.<SPAN style="COLOR: black">GetConfig</SPAN>("appSettings");<o:p></o:p></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp;</SPAN><SPAN style="COLOR: black">...</SPAN><o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'"><FONT size=2>}<o:p></o:p></FONT></SPAN></P>
<P class=Body style="MARGIN: 0in 0in 0pt"><o:p>&nbsp;</o:p></P>
<P class=Body style="MARGIN: 0in 0in 0pt">The ConfigurationSettings class find the appropriate section handler, which will look in the current app configuration data for the appSettings section (parts of which can be inherited from machine.config), parse the contents, build the NameValueCollection and return it. Because different section handlers can return different data types based on the data provided in their sections, the GetConfig method returns an object that must be cast to the appropriate type. As a short-cut, the ConfigurationSettings class provides built in support for the appSettings section via the AppSettings property:</P>
<P class=Body style="MARGIN: 0in 0in 0pt"><o:p>&nbsp;</o:p></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><FONT size=2><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'">static</SPAN><SPAN style="FONT-FAMILY: 'Courier New'"> <SPAN style="COLOR: blue">void</SPAN> </SPAN><st1:place><SPAN style="COLOR: black"><SPAN style="FONT-FAMILY: 'Courier New'">Main</SPAN></SPAN></st1:place><SPAN style="FONT-FAMILY: 'Courier New'">() {<o:p></o:p></SPAN></FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: black">NameValueCollection</SPAN> <SPAN style="COLOR: black">settings</SPAN> = <SPAN style="COLOR: black">ConfigurationSettings</SPAN>.<SPAN style="COLOR: black">AppSettings</SPAN>;<o:p></o:p></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: black">MessageBox</SPAN>.<SPAN style="COLOR: black">Show</SPAN>(<B style="mso-bidi-font-weight: normal"><SPAN style="COLOR: black">settings</SPAN>["pi"]</B>);<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'"><FONT size=2>}<o:p></o:p></FONT></SPAN></P>
<P class=Body style="MARGIN: 0in 0in 0pt"><o:p>&nbsp;</o:p></P>
<P class=Body style="MARGIN: 0in 0in 0pt">Once you’ve got the settings collection, you can access the string values using the key as an indexer key. If you’d like typed data (pi's not much good as a string), you can parse the string manually using the type in question or you can use the AppSettingsReader class (also from the System.Configuration namespace) to provide typed access to the appSettings values:</P>
<P class=Body style="MARGIN: 0in 0in 0pt"><o:p>&nbsp;</o:p></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><FONT size=2><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'">static</SPAN><SPAN style="FONT-FAMILY: 'Courier New'"> <SPAN style="COLOR: blue">void</SPAN> </SPAN><st1:place><SPAN style="COLOR: black"><SPAN style="FONT-FAMILY: 'Courier New'">Main</SPAN></SPAN></st1:place><SPAN style="FONT-FAMILY: 'Courier New'">() {<o:p></o:p></SPAN></FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: green">// Parse the value manually<o:p></o:p></SPAN></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: black">NameValueCollection</SPAN> <SPAN style="COLOR: black">settings</SPAN> = <SPAN style="COLOR: black">ConfigurationSettings</SPAN>.<SPAN style="COLOR: black">AppSettings</SPAN>;<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: black">Decimal</SPAN> <SPAN style="COLOR: black">pi1</SPAN> = <B style="mso-bidi-font-weight: normal"><SPAN style="COLOR: black">Decimal</SPAN>.<SPAN style="COLOR: black">Parse</SPAN>(<SPAN style="COLOR: black">settings</SPAN>["pi"])</B>;<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'"><o:p><FONT size=2>&nbsp;</FONT></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: green">// Let AppSettingsReader parse the value<o:p></o:p></SPAN></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: black">AppSettingsReader</SPAN> <SPAN style="COLOR: black">reader</SPAN> = <SPAN style="COLOR: blue">new</SPAN> <SPAN style="COLOR: black">AppSettingsReader</SPAN>();<o:p></o:p></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><FONT size=2><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN></SPAN></B><SPAN style="COLOR: black; FONT-FAMILY: 'Courier New'">Decimal</SPAN><SPAN style="FONT-FAMILY: 'Courier New'"> <SPAN style="COLOR: black">pi2</SPAN> = <B style="mso-bidi-font-weight: normal">(<SPAN style="COLOR: black">Decimal</SPAN>)<SPAN style="COLOR: black">reader</SPAN>.<SPAN style="COLOR: black">GetValue</SPAN>("pi", <SPAN style="COLOR: blue">typeof</SPAN>(<SPAN style="COLOR: black">Decimal</SPAN>));<o:p></o:p></B></SPAN></FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="COLOR: black; FONT-FAMILY: 'Courier New'"><o:p><FONT size=2>&nbsp;</FONT></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="COLOR: black; FONT-FAMILY: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>...<o:p></o:p></FONT></SPAN></P>
<P><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'; mso-ansi-language: EN-US; mso-fareast-font-family: 'Times New Roman'; mso-fareast-language: EN-US; mso-bidi-language: AR-SA">}</SPAN> </P>
<DIV style="mso-element: footnote-list">
<DIV id=ftn1 style="mso-element: footnote"><FONT face=Arial size=2>
<P class=HD style="MARGIN: 0.25in 0in 4pt"><STRONG><FONT face="Times New Roman" size=3>Isolated Storage</FONT></STRONG></P>
<P class=Body style="MARGIN: 0in 0in 0pt"><FONT face="Times New Roman" size=3>While .config files are good for read-only application settings, for read/write user settings, .NET provides <I style="mso-bidi-font-style: normal">isolated storage</I>. It's called isolated because it doesn't require the application to know where on the hard drive the settings files are stored. In fact, the path to the root of the path on the file system isn’t even available to the application. Instead, named chunks of data are called <I style="mso-bidi-font-style: normal">streams </I>and containers of streams and sub-containers are called <I style="mso-bidi-font-style: normal">stores</I>. The model is such that the implementation could vary over time, although currently it’s implemented on top of special folders with sub-folders and files.</FONT></P>
<P class=Body style="MARGIN: 0in 0in 0pt"><FONT face="Times New Roman" size=3></FONT>&nbsp;</P>
<P class=Body style="MARGIN: 0in 0in 0pt"><FONT face="Times New Roman" size=3>The special folder you get depends on the <I style="mso-bidi-font-style: normal">scope</I> you specify when getting the store you want to work with. The scope is specified by combining one or more flags from the IsolatedStorageScope enumeration:</FONT></P>
<P class=Body style="MARGIN: 0in 0in 0pt"><o:p><FONT face="Times New Roman" size=3>&nbsp;</FONT></o:p></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'">enum</SPAN><SPAN style="FONT-FAMILY: 'Courier New'"> <SPAN style="COLOR: black">IsolatedStorageScope</SPAN> {<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: black">Assembly</SPAN>, <SPAN style="COLOR: green">// Always required<o:p></o:p></SPAN></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: black">Domain</SPAN>, <o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: black">None</SPAN>,<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: black">Roaming</SPAN>,<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: black">User</SPAN>, <SPAN style="COLOR: green">// Always required<o:p></o:p></SPAN></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'">}<o:p></o:p></SPAN></P>
<P class=Body style="MARGIN: 0in 0in 0pt"><o:p><FONT face="Times New Roman" size=3>&nbsp;</FONT></o:p></P>
<P class=Body style="MARGIN: 0in 0in 0pt"><FONT face="Times New Roman" size=3>Isolated storage stores must at least be scoped by assembly and user, which means that there are no user-neutral application settings available from isolated storage, just user and roaming user settings (depending on whether the Roaming flag is used or not). In addition, settings can be scoped to a .NET AppDomain using the Domain flag, but that’s not typically useful in a WinForms application. The valid combinations of scope flags as related to settings localities and example folder roots under Windows XP are shown in <SPAN style="mso-field-code: ' REF _Ref31641767 h '">Table <SPAN style="mso-no-proof: yes">1</SPAN></SPAN>.</FONT></P>
<P class=Body style="MARGIN: 0in 0in 0pt"><o:p><FONT face="Times New Roman" size=3>&nbsp;</FONT></o:p></P>
<P class=MsoFootnoteText style="MARGIN: 0in 0in 0pt">
<TABLE class=MsoTableGrid style="BORDER-RIGHT: medium none; BORDER-TOP: medium none; BORDER-LEFT: medium none; BORDER-BOTTOM: medium none; BORDER-COLLAPSE: collapse; mso-border-alt: solid windowtext .5pt; mso-yfti-tbllook: 480; mso-padding-alt: 0in 5.4pt 0in 5.4pt; mso-border-insideh: .5pt solid windowtext; mso-border-insidev: .5pt solid windowtext" cellSpacing=0 cellPadding=0 border=1>
<TBODY>
<TR style="mso-yfti-irow: 0">
<TD style="BORDER-RIGHT: windowtext 1pt solid; PADDING-RIGHT: 5.4pt; BORDER-TOP: windowtext 1pt solid; PADDING-LEFT: 5.4pt; PADDING-BOTTOM: 0in; BORDER-LEFT: windowtext 1pt solid; PADDING-TOP: 0in; BORDER-BOTTOM: windowtext 1pt solid; BACKGROUND-COLOR: transparent; mso-border-alt: solid windowtext .5pt" vAlign=top>
<P class=Body style="MARGIN: 0in 0in 0pt; TEXT-INDENT: 0in"><FONT face="Times New Roman">IsolatedStorageScope Flags</FONT></P></TD>
<TD style="BORDER-RIGHT: windowtext 1pt solid; PADDING-RIGHT: 5.4pt; BORDER-TOP: windowtext 1pt solid; PADDING-LEFT: 5.4pt; PADDING-BOTTOM: 0in; BORDER-LEFT: #ece9d8; PADDING-TOP: 0in; BORDER-BOTTOM: windowtext 1pt solid; BACKGROUND-COLOR: transparent; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt" vAlign=top>
<P class=Body style="MARGIN: 0in 0in 0pt; TEXT-INDENT: 0in"><FONT face="Times New Roman">Locality</FONT></P></TD>
<TD style="BORDER-RIGHT: windowtext 1pt solid; PADDING-RIGHT: 5.4pt; BORDER-TOP: windowtext 1pt solid; PADDING-LEFT: 5.4pt; PADDING-BOTTOM: 0in; BORDER-LEFT: #ece9d8; PADDING-TOP: 0in; BORDER-BOTTOM: windowtext 1pt solid; BACKGROUND-COLOR: transparent; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt" vAlign=top>
<P class=Body style="MARGIN: 0in 0in 0pt; TEXT-INDENT: 0in"><FONT face="Times New Roman">Folder Root</FONT></P></TD></TR>
<TR style="mso-yfti-irow: 1">
<TD style="BORDER-RIGHT: windowtext 1pt solid; PADDING-RIGHT: 5.4pt; BORDER-TOP: #ece9d8; PADDING-LEFT: 5.4pt; PADDING-BOTTOM: 0in; BORDER-LEFT: windowtext 1pt solid; PADDING-TOP: 0in; BORDER-BOTTOM: windowtext 1pt solid; BACKGROUND-COLOR: transparent; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt" vAlign=top>
<P class=Body style="MARGIN: 0in 0in 0pt; TEXT-INDENT: 0in"><FONT face="Times New Roman">Assembly, User</FONT></P></TD>
<TD style="BORDER-RIGHT: windowtext 1pt solid; PADDING-RIGHT: 5.4pt; BORDER-TOP: #ece9d8; PADDING-LEFT: 5.4pt; PADDING-BOTTOM: 0in; BORDER-LEFT: #ece9d8; PADDING-TOP: 0in; BORDER-BOTTOM: windowtext 1pt solid; BACKGROUND-COLOR: transparent; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt" vAlign=top>
<P class=Body style="MARGIN: 0in 0in 0pt; TEXT-INDENT: 0in"><FONT face="Times New Roman">User</FONT></P></TD>
<TD style="BORDER-RIGHT: windowtext 1pt solid; PADDING-RIGHT: 5.4pt; BORDER-TOP: #ece9d8; PADDING-LEFT: 5.4pt; PADDING-BOTTOM: 0in; BORDER-LEFT: #ece9d8; PADDING-TOP: 0in; BORDER-BOTTOM: windowtext 1pt solid; BACKGROUND-COLOR: transparent; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt" vAlign=top>
<P class=CDT style="MARGIN: 0in 0in 0pt"><SPAN style="FONT-SIZE: 8pt; mso-bidi-font-family: 'Courier New'"><FONT face="Courier New">C:\Documents and Settings\csells\Local Settings\Application Data\IsolatedStorage<o:p></o:p></FONT></SPAN></P></TD></TR>
<TR style="mso-yfti-irow: 2">
<TD style="BORDER-RIGHT: windowtext 1pt solid; PADDING-RIGHT: 5.4pt; BORDER-TOP: #ece9d8; PADDING-LEFT: 5.4pt; PADDING-BOTTOM: 0in; BORDER-LEFT: windowtext 1pt solid; PADDING-TOP: 0in; BORDER-BOTTOM: windowtext 1pt solid; BACKGROUND-COLOR: transparent; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt" vAlign=top>
<P class=Body style="MARGIN: 0in 0in 0pt; TEXT-INDENT: 0in"><FONT face="Times New Roman">Assembly, User, Roaming</FONT></P></TD>
<TD style="BORDER-RIGHT: windowtext 1pt solid; PADDING-RIGHT: 5.4pt; BORDER-TOP: #ece9d8; PADDING-LEFT: 5.4pt; PADDING-BOTTOM: 0in; BORDER-LEFT: #ece9d8; PADDING-TOP: 0in; BORDER-BOTTOM: windowtext 1pt solid; BACKGROUND-COLOR: transparent; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt" vAlign=top>
<P class=Body style="MARGIN: 0in 0in 0pt; TEXT-INDENT: 0in"><FONT face="Times New Roman">Roaming User</FONT></P></TD>
<TD style="BORDER-RIGHT: windowtext 1pt solid; PADDING-RIGHT: 5.4pt; BORDER-TOP: #ece9d8; PADDING-LEFT: 5.4pt; PADDING-BOTTOM: 0in; BORDER-LEFT: #ece9d8; PADDING-TOP: 0in; BORDER-BOTTOM: windowtext 1pt solid; BACKGROUND-COLOR: transparent; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt" vAlign=top>
<P class=CDT style="MARGIN: 0in 0in 0pt"><SPAN style="FONT-SIZE: 8pt; mso-bidi-font-family: 'Courier New'"><FONT face="Courier New">C:\Documents and Settings\csells\Application Data\IsolatedStorage<o:p></o:p></FONT></SPAN></P></TD></TR>
<TR style="mso-yfti-irow: 3">
<TD style="BORDER-RIGHT: windowtext 1pt solid; PADDING-RIGHT: 5.4pt; BORDER-TOP: #ece9d8; PADDING-LEFT: 5.4pt; PADDING-BOTTOM: 0in; BORDER-LEFT: windowtext 1pt solid; PADDING-TOP: 0in; BORDER-BOTTOM: windowtext 1pt solid; BACKGROUND-COLOR: transparent; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt" vAlign=top>
<P class=Body style="MARGIN: 0in 0in 0pt; TEXT-INDENT: 0in"><FONT face="Times New Roman">Assembly, User, Domain</FONT></P></TD>
<TD style="BORDER-RIGHT: windowtext 1pt solid; PADDING-RIGHT: 5.4pt; BORDER-TOP: #ece9d8; PADDING-LEFT: 5.4pt; PADDING-BOTTOM: 0in; BORDER-LEFT: #ece9d8; PADDING-TOP: 0in; BORDER-BOTTOM: windowtext 1pt solid; BACKGROUND-COLOR: transparent; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt" vAlign=top>
<P class=Body style="MARGIN: 0in 0in 0pt; TEXT-INDENT: 0in"><FONT face="Times New Roman">Domain</FONT></P></TD>
<TD style="BORDER-RIGHT: windowtext 1pt solid; PADDING-RIGHT: 5.4pt; BORDER-TOP: #ece9d8; PADDING-LEFT: 5.4pt; PADDING-BOTTOM: 0in; BORDER-LEFT: #ece9d8; PADDING-TOP: 0in; BORDER-BOTTOM: windowtext 1pt solid; BACKGROUND-COLOR: transparent; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt" vAlign=top>
<P class=CDT style="MARGIN: 0in 0in 0pt"><SPAN style="FONT-SIZE: 8pt; mso-bidi-font-family: 'Courier New'"><FONT face="Courier New">C:\Documents and Settings\csells\Local Settings\Application Data\IsolatedStorage<o:p></o:p></FONT></SPAN></P></TD></TR>
<TR style="mso-yfti-irow: 4; mso-yfti-lastrow: yes">
<TD style="BORDER-RIGHT: windowtext 1pt solid; PADDING-RIGHT: 5.4pt; BORDER-TOP: #ece9d8; PADDING-LEFT: 5.4pt; PADDING-BOTTOM: 0in; BORDER-LEFT: windowtext 1pt solid; PADDING-TOP: 0in; BORDER-BOTTOM: windowtext 1pt solid; BACKGROUND-COLOR: transparent; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt" vAlign=top>
<P class=Body style="MARGIN: 0in 0in 0pt; TEXT-INDENT: 0in"><FONT face="Times New Roman">Assembly, User, Domain, Roaming</FONT></P></TD>
<TD style="BORDER-RIGHT: windowtext 1pt solid; PADDING-RIGHT: 5.4pt; BORDER-TOP: #ece9d8; PADDING-LEFT: 5.4pt; PADDING-BOTTOM: 0in; BORDER-LEFT: #ece9d8; PADDING-TOP: 0in; BORDER-BOTTOM: windowtext 1pt solid; BACKGROUND-COLOR: transparent; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt" vAlign=top>
<P class=Body style="MARGIN: 0in 0in 0pt; TEXT-INDENT: 0in"><FONT face="Times New Roman">Roaming User Domain</FONT></P></TD>
<TD style="BORDER-RIGHT: windowtext 1pt solid; PADDING-RIGHT: 5.4pt; BORDER-TOP: #ece9d8; PADDING-LEFT: 5.4pt; PADDING-BOTTOM: 0in; BORDER-LEFT: #ece9d8; PADDING-TOP: 0in; BORDER-BOTTOM: windowtext 1pt solid; BACKGROUND-COLOR: transparent; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt" vAlign=top>
<P class=CDT style="MARGIN: 0in 0in 0pt"><SPAN style="FONT-SIZE: 8pt; mso-bidi-font-family: 'Courier New'"><FONT face="Courier New">C:\Documents and Settings\csells\Local Settings\Application Data\IsolatedStorage<o:p></o:p></FONT></SPAN></P></TD></TR></TBODY></TABLE></P>
<P class=MsoCaption style="MARGIN: 6pt 0in"><A name=_Ref31641767><STRONG>Table <SPAN style="mso-field-code: ' SEQ Table * ARABIC '"><SPAN style="mso-no-proof: yes">1</SPAN></SPAN></STRONG></A><STRONG>: Isolated storage scope, locality and folder roots</STRONG></P>
<P class=Body style="MARGIN: 0in 0in 0pt"><FONT face="Times New Roman" size=3>Obtaining a store to work with is a matter of specifying the scope to the GetStore method of the IsolatedStorageFile class from the System.IO.IsolatedStorage namespace:</FONT></P>
<P class=Body style="MARGIN: 0in 0in 0pt"><o:p><FONT face="Times New Roman" size=3>&nbsp;</FONT></o:p></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="COLOR: black; FONT-FAMILY: 'Courier New'">IsolatedStorageScope</SPAN><SPAN style="FONT-FAMILY: 'Courier New'"> <SPAN style="COLOR: black">scope</SPAN> =<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: black">IsolatedStorageScope</SPAN>.<SPAN style="COLOR: black">Assembly</SPAN> | <o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: black">IsolatedStorageScope</SPAN>.<SPAN style="COLOR: black">User</SPAN>;<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="COLOR: black; FONT-FAMILY: 'Courier New'">IsolatedStorageFile</SPAN><SPAN style="FONT-FAMILY: 'Courier New'"> <SPAN style="COLOR: black">store</SPAN> =<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: black">IsolatedStorageFile</SPAN>.<SPAN style="COLOR: black">GetStore</SPAN>(<SPAN style="COLOR: black">scope</SPAN>, <SPAN style="COLOR: blue">null</SPAN>, <SPAN style="COLOR: blue">null</SPAN>);<o:p></o:p></SPAN></P>
<P class=Body style="MARGIN: 0in 0in 0pt"><o:p><FONT face="Times New Roman" size=3>&nbsp;</FONT></o:p></P>
<P class=Body style="MARGIN: 0in 0in 0pt"><FONT face="Times New Roman" size=3>Because getting the user store for the assembly is so common, the IsolatedStorageFile class provides a helper with that scope already in place:</FONT></P>
<P class=Body style="MARGIN: 0in 0in 0pt"><o:p><FONT face="Times New Roman" size=3>&nbsp;</FONT></o:p></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="COLOR: green; FONT-FAMILY: 'Courier New'">// Scope = User | Assembly<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="COLOR: black; FONT-FAMILY: 'Courier New'">IsolatedStorageFile</SPAN><SPAN style="FONT-FAMILY: 'Courier New'"> <SPAN style="COLOR: black">store</SPAN> =<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: black">IsolatedStorageFile</SPAN>.<B style="mso-bidi-font-weight: normal"><SPAN style="COLOR: black">GetUserStoreForAssembly</SPAN></B>();<o:p></o:p></SPAN></P>
<P class=Body style="MARGIN: 0in 0in 0pt"><o:p><FONT face="Times New Roman" size=3>&nbsp;</FONT></o:p></P>
<P class=Body style="MARGIN: 0in 0in 0pt"><FONT face="Times New Roman" size=3>Once you’ve got the store, you can treat it like a container of streams and sub-containers using the members of the IsolatedStorageFile class:</FONT></P>
<P class=Body style="MARGIN: 0in 0in 0pt"><o:p><FONT face="Times New Roman" size=3>&nbsp;</FONT></o:p></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'">sealed</SPAN><SPAN style="FONT-FAMILY: 'Courier New'"> <SPAN style="COLOR: blue">class</SPAN> <SPAN style="COLOR: black">IsolatedStorageFile</SPAN> : <SPAN style="COLOR: black">IsolatedStorage</SPAN>, <SPAN style="COLOR: black">IDisposable</SPAN> {<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: green">// Properties<o:p></o:p></SPAN></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: blue">object</SPAN> <SPAN style="COLOR: black">AssemblyIdentity</SPAN> { <SPAN style="COLOR: blue">get</SPAN>; }<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: black">UInt64</SPAN> <SPAN style="COLOR: black">CurrentSize</SPAN> { <SPAN style="COLOR: blue">virtual</SPAN> <SPAN style="COLOR: blue">get</SPAN>; }<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: blue">object</SPAN> <SPAN style="COLOR: black">DomainIdentity</SPAN> { <SPAN style="COLOR: blue">get</SPAN>; }<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: black">UInt64</SPAN> <SPAN style="COLOR: black">MaximumSize</SPAN> { <SPAN style="COLOR: blue">virtual</SPAN> <SPAN style="COLOR: blue">get</SPAN>; }<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: black">IsolatedStorageScope</SPAN> <SPAN style="COLOR: black">Scope</SPAN> { <SPAN style="COLOR: blue">get</SPAN>; }<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'"><o:p>&nbsp;</o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: green">// Methods<o:p></o:p></SPAN></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: blue">void</SPAN> <SPAN style="COLOR: black">Close</SPAN>();<o:p></o:p></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: blue">void</SPAN> <SPAN style="COLOR: black">CreateDirectory</SPAN>(<SPAN style="COLOR: blue">string</SPAN> <SPAN style="COLOR: black">dir</SPAN>);<o:p></o:p></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: blue">void</SPAN> <SPAN style="COLOR: black">DeleteDirectory</SPAN>(<SPAN style="COLOR: blue">string</SPAN> <SPAN style="COLOR: black">dir</SPAN>);<o:p></o:p></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: blue">void</SPAN> <SPAN style="COLOR: black">DeleteFile</SPAN>(<SPAN style="COLOR: blue">string</SPAN> <SPAN style="COLOR: black">file</SPAN>);<o:p></o:p></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: blue">string</SPAN>[] <SPAN style="COLOR: black">GetDirectoryNames</SPAN>(<SPAN style="COLOR: blue">string</SPAN> <SPAN style="COLOR: black">searchPattern</SPAN>);<o:p></o:p></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: blue">static</SPAN> <SPAN style="COLOR: black">IEnumerator</SPAN> <SPAN style="COLOR: black">GetEnumerator</SPAN>(<SPAN style="COLOR: black">IsolatedStorageScope</SPAN> <SPAN style="COLOR: black">scope</SPAN>);<o:p></o:p></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: blue">string</SPAN>[] <SPAN style="COLOR: black">GetFileNames</SPAN>(<SPAN style="COLOR: blue">string</SPAN> <SPAN style="COLOR: black">searchPattern</SPAN>);<o:p></o:p></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: blue">static</SPAN> <SPAN style="COLOR: black">IsolatedStorageFile</SPAN> <SPAN style="COLOR: black">GetStore</SPAN>(...);<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: blue">static</SPAN> <SPAN style="COLOR: black">IsolatedStorageFile</SPAN> <SPAN style="COLOR: black">GetUserStoreForAssembly</SPAN>();<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: blue">static</SPAN> <SPAN style="COLOR: black">IsolatedStorageFile</SPAN> <SPAN style="COLOR: black">GetUserStoreForDomain</SPAN>();<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: blue">virtual</SPAN> <SPAN style="COLOR: blue">void</SPAN> <SPAN style="COLOR: black">Remove</SPAN>();<o:p></o:p></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: blue">static</SPAN> <SPAN style="COLOR: blue">void</SPAN> <SPAN style="COLOR: black">Remove</SPAN>(<SPAN style="COLOR: black">IsolatedStorageScope</SPAN> <SPAN style="COLOR: black">scope</SPAN>);<o:p></o:p></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'">}<o:p></o:p></SPAN></P>
<P class=Body style="MARGIN: 0in 0in 0pt"><o:p><FONT face="Times New Roman" size=3>&nbsp;</FONT></o:p></P>
<P class=Body style="MARGIN: 0in 0in 0pt"><FONT face="Times New Roman" size=3>Don't be confused that the IsolatedStorageFile class is actually implemented as a directory the file system. This is but one implementation of the IsolatedStorageStorage abstract base class on the underlying OS's file system. Other implementations are certainly possible (although none are currently provided by .NET).</FONT></P>
<P class=Body style="MARGIN: 0in 0in 0pt"><FONT face="Times New Roman" size=3>The most common thing you'll want to do with a store is to create a stream on it using an instance of the IsolatedStorageFileStream. The IsolatedStorageFileStream class is just another implementation of the virtual methods of the FileStream to hide the details of the underlying implementation. Once you've got the stream, you can write to it or read from it just as if you'd opened it as a file yourself. Here's the code to store the main form's location using isolated storage:</FONT></P>
<P class=Body style="MARGIN: 0in 0in 0pt"><o:p><FONT face="Times New Roman" size=3>&nbsp;</FONT></o:p></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'">void</SPAN><SPAN style="FONT-FAMILY: 'Courier New'"> <SPAN style="COLOR: black">MainForm_Closing</SPAN>(<SPAN style="COLOR: blue">object</SPAN> <SPAN style="COLOR: black">sender</SPAN>, <SPAN style="COLOR: black">CancelEventArgs</SPAN> <SPAN style="COLOR: black">e</SPAN>) {<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: green">// Save the form's position before it closes<o:p></o:p></SPAN></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: black">IsolatedStorageFile</SPAN> <SPAN style="COLOR: black">store</SPAN> =<o:p></o:p></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: black">IsolatedStorageFile</SPAN>.<SPAN style="COLOR: black">GetUserStoreForAssembly</SPAN>();<o:p></o:p></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">using</SPAN>( <SPAN style="COLOR: black">IsolatedStorageFileStream</SPAN> <SPAN style="COLOR: black">stream</SPAN> =<o:p></o:p></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: blue">new</SPAN> <SPAN style="COLOR: black">IsolatedStorageFileStream</SPAN>("MainForm.txt",<o:p></o:p></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: black">FileMode</SPAN>.<SPAN style="COLOR: black">Create</SPAN>,<o:p></o:p></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: black">store</SPAN>) )<o:p></o:p></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">using</SPAN>( <SPAN style="COLOR: black">StreamWriter</SPAN> <SPAN style="COLOR: black">writer</SPAN> = <SPAN style="COLOR: blue">new</SPAN> <SPAN style="COLOR: black">StreamWriter</SPAN>(<SPAN style="COLOR: black">stream</SPAN>) ) {<o:p></o:p></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: green">// Restore the window state to save location and<o:p></o:p></SPAN></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: green">// client size at restored state<o:p></o:p></SPAN></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: black">FormWindowState</SPAN> <SPAN style="COLOR: black">state</SPAN> = <SPAN style="COLOR: blue">this</SPAN>.<SPAN style="COLOR: black">WindowState</SPAN>;<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: blue">this</SPAN>.<SPAN style="COLOR: black">WindowState</SPAN> = <SPAN style="COLOR: black">FormWindowState</SPAN>.<SPAN style="COLOR: black">Normal</SPAN>;<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'"><o:p>&nbsp;</o:p></SPAN></P><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN>&nbsp;&nbsp;&nbsp; writer</SPAN>.<SPAN style="COLOR: black">WriteLine</SPAN>(<SPAN style="COLOR: black"><STRONG>ToString</STRONG></SPAN>(<SPAN style="COLOR: blue">this</SPAN>.<SPAN style="COLOR: black">Location</SPAN>));<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN>&nbsp;&nbsp;&nbsp; writer</SPAN>.<SPAN style="COLOR: black">WriteLine</SPAN>(<SPAN style="COLOR: black"><STRONG>ToString</STRONG></SPAN>(<SPAN style="COLOR: blue">this</SPAN>.<SPAN style="COLOR: black">ClientSize</SPAN>));<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN>&nbsp;&nbsp;&nbsp; writer</SPAN>.<SPAN style="COLOR: black">WriteLine</SPAN>(<SPAN style="COLOR: black"><STRONG>ToString</STRONG></SPAN>(state));<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"></SPAN></SPAN><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>}<o:p></o:p></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'">}</SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'"></SPAN>&nbsp;</P><SPAN style="FONT-FAMILY: 'Courier New'">
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="COLOR: green; FONT-FAMILY: 'Courier New'">// Convert an object to a string<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'">string</SPAN><SPAN style="FONT-FAMILY: 'Courier New'"> <SPAN style="COLOR: black">ToString</SPAN>(<SPAN style="COLOR: blue">object</SPAN> <SPAN style="COLOR: black">obj</SPAN>) {<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: black">TypeConverter</SPAN> <SPAN style="COLOR: black">converter</SPAN> =<o:p></o:p></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: black">TypeDescriptor</SPAN>.<SPAN style="COLOR: black">GetConverter</SPAN>(<SPAN style="COLOR: black">obj</SPAN>.<SPAN style="COLOR: black">GetType</SPAN>());<o:p></o:p></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">return</SPAN> <SPAN style="COLOR: black">converter</SPAN>.<SPAN style="COLOR: black">ConvertToString</SPAN>(<SPAN style="COLOR: black">obj</SPAN>);<o:p></o:p></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'">}</SPAN></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'"><o:p>&nbsp;</o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'">void</SPAN><SPAN style="FONT-FAMILY: 'Courier New'"> <SPAN style="COLOR: black">MainForm_Load</SPAN>(<SPAN style="COLOR: blue">object</SPAN> <SPAN style="COLOR: black">sender</SPAN>, <SPAN style="COLOR: black">EventArgs</SPAN> <SPAN style="COLOR: black">e</SPAN>) {<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: green">// Restore the form's position<o:p></o:p></SPAN></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">try</SPAN> {<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: black">IsolatedStorageFile</SPAN> <SPAN style="COLOR: black">store</SPAN> =<o:p></o:p></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: black">IsolatedStorageFile</SPAN>.<SPAN style="COLOR: black">GetUserStoreForAssembly</SPAN>();<o:p></o:p></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: blue">using</SPAN>( <SPAN style="COLOR: black">IsolatedStorageFileStream</SPAN> <SPAN style="COLOR: black">stream</SPAN> =<o:p></o:p></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: blue">new</SPAN> <SPAN style="COLOR: black">IsolatedStorageFileStream</SPAN>("MainForm.txt",<o:p></o:p></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: black">FileMode</SPAN>.<SPAN style="COLOR: black">Open</SPAN>,<o:p></o:p></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: black">store</SPAN>) )<o:p></o:p></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: blue">using</SPAN>( <SPAN style="COLOR: black">StreamReader</SPAN> <SPAN style="COLOR: black">reader</SPAN> = <SPAN style="COLOR: blue">new</SPAN> <SPAN style="COLOR: black">StreamReader</SPAN>(<SPAN style="COLOR: black">stream</SPAN>) ) {<o:p></o:p></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: green">// Don't let the form's position be set automatically<o:p></o:p></SPAN></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: blue">this</SPAN>.<SPAN style="COLOR: black">StartPosition</SPAN> = <SPAN style="COLOR: black">FormStartPosition</SPAN>.<SPAN style="COLOR: black">Manual</SPAN>;<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'"><o:p>&nbsp;</o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN style="COLOR: blue">this</SPAN>.<SPAN style="COLOR: black">Location</SPAN> =<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>(<SPAN style="COLOR: black">Point</SPAN>)<SPAN style="COLOR: black"><STRONG>FromString</STRONG></SPAN>(<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: black">reader</SPAN>.<SPAN style="COLOR: black">ReadLine</SPAN>(),<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: blue">typeof</SPAN>(<SPAN style="COLOR: black">Point</SPAN>));<o:p></o:p></SPAN></P><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: blue">this</SPAN>.<SPAN style="COLOR: black">ClientSize</SPAN> =<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>(<SPAN style="COLOR: black">Size</SPAN>)<SPAN style="COLOR: black"><STRONG>FromString</STRONG></SPAN>(<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: black">reader</SPAN>.<SPAN style="COLOR: black">ReadLine</SPAN>(),<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: blue">typeof</SPAN>(<SPAN style="COLOR: black">Size</SPAN>));<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: blue">this</SPAN>.<SPAN style="COLOR: black">WindowState</SPAN> =<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>(<SPAN style="COLOR: black">FormWindowState</SPAN>)<SPAN style="COLOR: black"><STRONG>FromString</STRONG></SPAN>(<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: black">reader</SPAN>.<SPAN style="COLOR: black">ReadLine</SPAN>(),<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: blue">typeof</SPAN>(<SPAN style="COLOR: black">FormWindowState</SPAN>));<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"></SPAN></SPAN><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>}<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>}<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: green">// Don't let missing settings scare the user<o:p></o:p></SPAN></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">catch</SPAN>( <SPAN style="COLOR: black">Exception </SPAN>) {}<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'">}<o:p></o:p></SPAN></P>
<P class=MsoFootnoteText style="MARGIN: 0in 0in 0pt">&nbsp;</P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="COLOR: green; FONT-FAMILY: 'Courier New'">// Convert a string to an object<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'">object</SPAN><SPAN style="FONT-FAMILY: 'Courier New'"> <SPAN style="COLOR: black">FromString</SPAN>(<SPAN style="COLOR: blue">object</SPAN> <SPAN style="COLOR: black">obj</SPAN>, <SPAN style="COLOR: black">Type</SPAN> <SPAN style="COLOR: black">type</SPAN>) {<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: black">TypeConverter</SPAN> <SPAN style="COLOR: black">converter</SPAN> = <SPAN style="COLOR: black">TypeDescriptor</SPAN>.<SPAN style="COLOR: black">GetConverter</SPAN>(<SPAN style="COLOR: black">type</SPAN>);<o:p></o:p></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">return</SPAN> <SPAN style="COLOR: black">converter</SPAN>.<SPAN style="COLOR: black">ConvertFromString</SPAN>(<SPAN style="COLOR: black">obj</SPAN>.<SPAN style="COLOR: black">ToString</SPAN>());<o:p></o:p></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'">}<o:p></o:p></SPAN></P>
<P class=MsoFootnoteText style="MARGIN: 0in 0in 0pt">&nbsp;</P>
<P class=MsoFootnoteText style="MARGIN: 0in 0in 0pt"><FONT face="Times New Roman" size=3>This example uses the Closing event to notice when the main form is about to close (but before it does) to save the window state, location and client size. Besides remembering to restore the window state before saving the location and the client size, notice the use of the ToString helper function. Likewise, when the form is loaded again, it reads the settings from isolated storage using a FromString helper that converts back from a string to an object. These helper functions use a type converter, which is a helper for a type to aid in the conversion between instances of the type and strings, which is important for saving settings in a text format. Any type can have an associated type converter and most of the simple ones do.</FONT></P>
<P class=MsoFootnoteText style="MARGIN: 0in 0in 0pt"><FONT face="Times New Roman" size=3></FONT>&nbsp;</P>
<P class=MsoFootnoteText style="MARGIN: 0in 0in 0pt"><STRONG><FONT face="Times New Roman" size=3>How I Figured This Out</FONT></STRONG></P>
<P class=MsoFootnoteText style="MARGIN: 0in 0in 0pt"><FONT face="Times New Roman" size=3>How applications store settings between sessions has evolved greatly over the years. I was there when .ini files were the rage, then the Registry, then special folders and now .config and isolated storage has come along. I found out how each worked by experimenting with the formats, trying out things that I know I want to do, reading the documentation for the various APIs provided by each mechanism, writing a bunch of sample code and asking questions.</FONT></P>
<P class=MsoFootnoteText style="MARGIN: 0in 0in 0pt"><FONT face="Times New Roman" size=3></FONT>&nbsp;</P>
<P class=MsoFootnoteText style="MARGIN: 0in 0in 0pt"><FONT face="Times New Roman" size=3>Based on these experiments, I still don't think that things are perfect. There should be a user-neutral application story for isolated storage as well as user-specific settings, for example. Also, there should be a roaming implementation that doesn't depend on an appropriately configured LAN, which doesn't allow me to roam between work and home. But, as my friend Don used to say, "the largest room in the world is the room for improvement." : )</FONT></P>
<P class=MsoFootnoteText style="MARGIN: 0in 0in 0pt"><FONT face="Times New Roman" size=3></FONT>&nbsp;</P>
<P class=MsoFootnoteText style="MARGIN: 0in 0in 0pt"><STRONG><FONT face="Times New Roman" size=3>Where Are We?</FONT></STRONG></P><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: Arial; mso-ansi-language: EN-US; mso-fareast-font-family: 'Times New Roman'; mso-fareast-language: EN-US; mso-bidi-language: AR-SA; mso-bidi-font-family: 'Times New Roman'"><SPAN style="mso-field-code: ' REF _Ref31641803 h '"><SPAN style="mso-no-proof: yes">
<P class=Body style="MARGIN: 0in 0in 0pt"><FONT size=3><FONT face="Times New Roman">Choosing which settings mechanism to use depends on what your needs are. If you have read-only application settings, the .config file is a good choice because it's simple. If you've got user settings, than isolated storage is a good choice because it supports reading and writing, partial trust, roaming (although not roaming in combination with partial trust) and has a nice versioning story. The Registry is really only useful for legacy applications or read/write application settings (which are pretty darn rare).</FONT></FONT></P>
<P class=Body style="MARGIN: 0in 0in 0pt"><FONT face="Times New Roman" size=3></FONT>&nbsp;</P>
<P class=Body style="MARGIN: 0in 0in 0pt"><FONT face="Times New Roman" size=3><STRONG>Feedback Response</STRONG></FONT></P>
<P class=Body style="MARGIN: 0in 0in 0pt"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: Arial"><FONT face="Times New Roman" size=3>Anne Brumme responded: "Thanks for the thorough answer. So IsolatedStorage provides a assembly-user-specific read/write wrapper on a free form text file? I was hoping for some simple name=value handling ala SetPrivateProfileString, but I guess I have to invent my own format for these items. Am I missing something obvious here?"</FONT></SPAN></P>
<P class=Body style="MARGIN: 0in 0in 0pt"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: Arial"><FONT face="Times New Roman" size=3></FONT></SPAN>&nbsp;</P>
<P class=Body style="MARGIN: 0in 0in 0pt"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: Arial"><FONT face="Times New Roman" size=3>That's a darn good question, Anne. It turns out that what you do with an isolated storage stream isn't any different than what you do with any other stream when serializing types. And that's such I good question that <A href="HowcanIuseserializationin.htm">I dedicated an entire response to answering just that</A>.</FONT></SPAN></P></SPAN></SPAN></SPAN></FONT></DIV></DIV></p>
  		<p style="MARGIN-RIGHT: 0px">
			<font size="2"><SPAN 
style="FONT-SIZE: 12pt; FONT-FAMILY: 'Times New Roman'; mso-fareast-font-family: 'Times New Roman'; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA">
		</p>
<H1>Feedback</H1>
<P><A href="mailto:askthewonk@sellsbrothers.com?subject=Feedback on 'What's the best way to maintain an .ini file in a C# Winforms app?'">I have 
feedback on this Ask The Wonk answer</A></P></SPAN></FONT></body>
</html>

