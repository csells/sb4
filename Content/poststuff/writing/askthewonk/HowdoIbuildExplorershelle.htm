<!-- Published by Fog Creek Software CityDesk MAYOWDQEAUJJTIIX/EB053B17/49 -->
<html>
<head>
	<title>How do I build Explorer shell extensions in .NET?</title>
</head>
<body>

		    
<b>Q. I was hoping to find out whether developing add-ons for Windows Explorer is supported using managed code in .NET, and if any samples of this sort of code are available?</b>
<p>
<i>Asked by a reader. Answered by the Wonk on January 27, 2003</i>
<P style="MARGIN-RIGHT: 0px">
		 </P>
		  
		<p style="MARGIN-RIGHT: 0px"><b>A.</b> <P class=MsoNormal style="MARGIN: 0in 0in 0pt">The Windows File Explorer shell is extensible into a ton of directions, from execution hooks to extend the Run dialog to context menu extensions to augment the built-in context menus for files and folders and that’s just the tip of the iceberg. These extensions almost all have one thing in common: they depend on COM. Specifically; the Explorer uses custom keys in the Registry to fine the shell extensions and then depend on COM functions and interfaces to access the custom functionality. Since you can implement COM components in .NET, theoretically you can implement any kind of COM-based Explorer extension you like.</P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt"><?xml:namespace prefix = o ns = "urn:schemas-microsoft-com:office:office" /><o:p>&nbsp;</o:p></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt">However, practice makes things a lot harder. Almost all of the COM interfaces that need implementing are <I style="mso-bidi-font-style: normal">custom interfaces</I>, which means that they aren’t described via a COM type library. Instead, they’re described in C/C++ header files and there are no tools to turn them into the .NET code that’s required to call and/or implement them. Instead, you have to write that interop code yourself, by hand. For example, a simple context menu extension requires you to implement three COM interfaces, all of which require code like the following to bring them into the managed world:</P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt"><o:p>&nbsp;</o:p></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'">[<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: black">ComImport</SPAN>(),<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: black">InterfaceType</SPAN>(<SPAN style="COLOR: black">ComInterfaceType</SPAN>.<SPAN style="COLOR: black">InterfaceIsIUnknown</SPAN>),<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: black">GuidAttribute</SPAN>("0000010e-0000-0000-C000-000000000046") ]<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; COLOR: blue; FONT-FAMILY: 'Courier New'">public</SPAN><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'"> <B style="mso-bidi-font-weight: normal"><SPAN style="COLOR: blue">interface</SPAN> <SPAN style="COLOR: black">IDataObject</SPAN></B> {<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>[<SPAN style="COLOR: black">PreserveSig</SPAN>()]<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">int</SPAN> <SPAN style="COLOR: black">GetData</SPAN>(<SPAN style="COLOR: blue">ref</SPAN> <SPAN style="COLOR: black">FORMATETC</SPAN> <SPAN style="COLOR: black">a</SPAN>, <SPAN style="COLOR: blue">ref</SPAN> <SPAN style="COLOR: black">STGMEDIUM</SPAN> <SPAN style="COLOR: black">b</SPAN>);<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>[<SPAN style="COLOR: black">PreserveSig</SPAN>()]<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">void</SPAN> <SPAN style="COLOR: black">GetDataHere</SPAN>(<SPAN style="COLOR: blue">int</SPAN> <SPAN style="COLOR: black">a</SPAN>, <SPAN style="COLOR: blue">ref</SPAN> <SPAN style="COLOR: black">STGMEDIUM</SPAN> <SPAN style="COLOR: black">b</SPAN>);<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>[<SPAN style="COLOR: black">PreserveSig</SPAN>()]<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">int</SPAN> <SPAN style="COLOR: black">QueryGetData</SPAN>(<SPAN style="COLOR: blue">int</SPAN> <SPAN style="COLOR: black">a</SPAN>);<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>[<SPAN style="COLOR: black">PreserveSig</SPAN>()]<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">int</SPAN> <SPAN style="COLOR: black">GetCanonicalFormatEtc</SPAN>(<SPAN style="COLOR: blue">int</SPAN> <SPAN style="COLOR: black">a</SPAN>, <SPAN style="COLOR: blue">ref</SPAN> <SPAN style="COLOR: blue">int</SPAN> <SPAN style="COLOR: black">b</SPAN>);<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>[<SPAN style="COLOR: black">PreserveSig</SPAN>()]<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">int</SPAN> <SPAN style="COLOR: black">SetData</SPAN>(<SPAN style="COLOR: blue">int</SPAN> <SPAN style="COLOR: black">a</SPAN>, <SPAN style="COLOR: blue">int</SPAN> <SPAN style="COLOR: black">b</SPAN>, <SPAN style="COLOR: blue">int</SPAN> <SPAN style="COLOR: black">c</SPAN>);<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>[<SPAN style="COLOR: black">PreserveSig</SPAN>()]<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">int</SPAN> <SPAN style="COLOR: black">EnumFormatEtc</SPAN>(<SPAN style="COLOR: blue">uint</SPAN> <SPAN style="COLOR: black">a</SPAN>, <SPAN style="COLOR: blue">ref</SPAN> <SPAN style="COLOR: black">Object</SPAN> <SPAN style="COLOR: black">b</SPAN>);<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>[<SPAN style="COLOR: black">PreserveSig</SPAN>()]<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">int</SPAN> <SPAN style="COLOR: black">DAdvise</SPAN>(<SPAN style="COLOR: blue">int</SPAN> <SPAN style="COLOR: black">a</SPAN>, <SPAN style="COLOR: blue">uint</SPAN> <SPAN style="COLOR: black">b</SPAN>, <SPAN style="COLOR: black">Object</SPAN> <SPAN style="COLOR: black">c</SPAN>, <SPAN style="COLOR: blue">ref</SPAN> <SPAN style="COLOR: blue">uint</SPAN> <SPAN style="COLOR: black">d</SPAN>);<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>[<SPAN style="COLOR: black">PreserveSig</SPAN>()]<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">int</SPAN> <SPAN style="COLOR: black">DUnadvise</SPAN>(<SPAN style="COLOR: blue">uint</SPAN> <SPAN style="COLOR: black">a</SPAN>);<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>[<SPAN style="COLOR: black">PreserveSig</SPAN>()]<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">int</SPAN> <SPAN style="COLOR: black">EnumDAdvise</SPAN>(<SPAN style="COLOR: blue">ref</SPAN> <SPAN style="COLOR: black">Object</SPAN> <SPAN style="COLOR: black">a</SPAN>);<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'">}<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt"><o:p>&nbsp;</o:p></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt">And not only do the COM interfaces need importing, so do the dependent data structures, e.g. the STGMEDIUM structure:</P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt"><o:p>&nbsp;</o:p></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'">[<SPAN style="COLOR: black">StructLayout</SPAN>(<SPAN style="COLOR: black">LayoutKind</SPAN>.<SPAN style="COLOR: black">Sequential</SPAN>)]<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; COLOR: blue; FONT-FAMILY: 'Courier New'">public</SPAN><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'"> <B style="mso-bidi-font-weight: normal"><SPAN style="COLOR: blue">struct</SPAN> <SPAN style="COLOR: black">FORMATETC</SPAN></B> {<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: black">CLIPFORMAT</SPAN> <SPAN style="COLOR: black">cfFormat</SPAN>;<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: blue">uint</SPAN> <SPAN style="COLOR: black">ptd</SPAN>;<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: black">DVASPECT</SPAN> <SPAN style="COLOR: black">dwAspect</SPAN>;<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: blue">int</SPAN> <SPAN style="COLOR: black">lindex</SPAN>;<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: black">TYMED</SPAN> <SPAN style="COLOR: black">tymed</SPAN>;<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'">}<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt"><o:p>&nbsp;</o:p></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt">Assuming you already know how to build an Explorer extension and you have access to the COM interop goo, the actual implementation of the shell extension is normally pretty anti-climatic.</P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt"><o:p>&nbsp;</o:p></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt">To get started building a COM-based Explorer extension in .NET, I’d first find the documentation and an example for how to do it in raw COM, then look to see if anyone’s yet built the interop layer for the related interfaces and data structures. <A href="http://www.google.com/microsoft.html" target=_blank>Google’s Microsoft-specific search page</A> is really good for that, and I used it to turn up a couple examples of Explorer extensions built using .NET:</P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt"><o:p>&nbsp;</o:p></P>
<UL style="MARGIN-TOP: 0in" type=disc>
<LI class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-list: l0 level1 lfo1; tab-stops: list .5in"><A href="http://www.codeproject.com/csharp/dateparser.asp" target=_blank>Creating a shell extension with C#</A>, Richard Birkby, 10/01, CodeProject.com</LI>
<LI class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-list: l0 level1 lfo1; tab-stops: list .5in"><A href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/cpsamples/html/explorer_shell_extension_technology_sample.asp" target=_blank>Explorer Shell Extension Technology Sample</A>, MSDN Online</LI></UL></p>
  		<p style="MARGIN-RIGHT: 0px">
			<font size="2"><SPAN 
style="FONT-SIZE: 12pt; FONT-FAMILY: 'Times New Roman'; mso-fareast-font-family: 'Times New Roman'; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA">
		</p>
<H1>Feedback</H1>
<P><A href="mailto:askthewonk@sellsbrothers.com?subject=Feedback on 'How do I build Explorer shell extensions in .NET?'">I have 
feedback on this Ask The Wonk answer</A></P></SPAN></FONT></body>
</html>

