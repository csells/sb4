<!-- Published by Fog Creek Software CityDesk MAYOWDQEAUJJTIIX/EB053B17/14 -->
<html>
<head>
	<title>What's the difference between typed dataset and untyped dataset?</title>
</head>
<body>

		    
<b>Q. What's the difference between typed dataset and untyped dataset? When do you use which?</b>
<p>
<i>Asked by reader. Answered by the Wonk on November 5, 2002</i>
<P style="MARGIN-RIGHT: 0px">
		 </P>
		  
		<p style="MARGIN-RIGHT: 0px"><b>A.</b> <P>An "untyped" dataset is an instance of the DataSet class from the System.Data namespace. It’s called “untyped” because all columns are provided as the base System.Object type (“object” in C# and “Object” in VB.NET) and must be coerced to the appropriate type, e.g.</P>
<P><SPAN style="FONT-SIZE: 10pt; COLOR: blue; FONT-FAMILY: 'Courier New'">void</SPAN><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'"> Form1_Load(<SPAN style="COLOR: blue">object</SPAN> sender, EventArgs e) {<BR></SPAN><B><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>DataSet ds = <SPAN style="COLOR: blue">new</SPAN> DataSet();<BR></SPAN></B><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>sqlDataAdapter1.Fill(ds);<BR></SPAN><B><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">foreach</SPAN>( DataRow row <SPAN style="COLOR: blue">in</SPAN> ds.Tables[0].Rows ) {<BR></SPAN></B><B><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: blue">string</SPAN> fname = (<SPAN style="COLOR: blue">string</SPAN>)row["au_fname"];<BR></SPAN></B><B><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: blue">bool</SPAN> contract = (<SPAN style="COLOR: blue">bool</SPAN>)row["contract"];<BR></SPAN></B><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: blue">string</SPAN> item =<BR></SPAN><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: blue">string</SPAN>.Format("{0} has a contract: {1}", fname, contract);<BR></SPAN><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>listBox1.Items.Add(item);<BR></SPAN><B><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>}<BR></SPAN></B><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'">}<O:P></O:P></SPAN></P>
<P>The problem, of course, is that it’s a pain to get the coercion code is tedious to write and easy to get wrong. A type-safe dataset, on the other hand, allows you to write the following code:</P>
<P><SPAN style="FONT-SIZE: 10pt; COLOR: blue; FONT-FAMILY: 'Courier New'">void</SPAN><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'"> Form1_Load(<SPAN style="COLOR: blue">object</SPAN> sender, EventArgs e) {<BR></SPAN><B><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>AuthorsDataSet ds = <SPAN style="COLOR: blue">new</SPAN> AuthorsDataSet();<BR></SPAN></B><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>sqlDataAdapter1.Fill(ds);<BR></SPAN><B><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">foreach</SPAN>( AuthorsDataSet.authorsRow row <SPAN style="COLOR: blue">in</SPAN> ds.authors.Rows ) {<BR></SPAN></B><B><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: blue">string</SPAN> fname = row.au_fname;<BR></SPAN></B><B><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: blue">bool</SPAN> contract = row.contract;<BR></SPAN></B><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: blue">string</SPAN> item =<BR></SPAN><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: blue">string</SPAN>.Format("{0} has a contract: {1}", fname, contract);<BR></SPAN><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>listBox1.Items.Add(item);<BR></SPAN><B><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>}<BR></SPAN></B><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'">}<O:P></O:P></SPAN></P>
<P>In this case, notice that we have a new type, AuthorsDataSet. It derives from the DataSet base type and provides type-safe access to each column in each row via the authorsRow nested type and the authors property on the filled AuthorsDataSet. Now we can simply access the columns as if they were fields without any type coercion code.</P>
<H1>Feedback Responses</H1>
<P><EM>Paul Janssen asked: "Do typed datasets provide methods for finding rows in a datatable?&nbsp; What other kinds of functionality do typed datasets provide?"</EM></P>
<P>Typed data sets provide three features that aren't part of the base DataSet class. One, they provide a designer surface for laying out relationships and constraints. Two, they provide type-checked operations, i.e. retrieval, inserts and updates. Three, they provide a special constructor to add serialization support to your typed data set. All of the rest of the functionality, e.g. finding rows,&nbsp;comes from the DataSet and related classes themselves.</P>
<P>However, the typed data set does provide a wrapper for finding a row by a table's primary key:</P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; COLOR: blue; FONT-FAMILY: 'Courier New'">void</SPAN><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'"> <SPAN style="COLOR: black">findButton_Click</SPAN>(<SPAN style="COLOR: blue">object</SPAN> <SPAN style="COLOR: black">sender</SPAN>, <SPAN style="COLOR: black">System</SPAN>.<SPAN style="COLOR: black">EventArgs</SPAN> <SPAN style="COLOR: black">e</SPAN>) {<?xml:namespace prefix = o ns = "urn:schemas-microsoft-com:office:office" /><o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: green">// Find by primary key<o:p></o:p></SPAN></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: black">SubscribersDataSet</SPAN>.<SPAN style="COLOR: black">SubscribersRow</SPAN> <SPAN style="COLOR: black">row</SPAN> =<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: black">subscribersDataSet1</SPAN>.<SPAN style="COLOR: black">Subscribers</SPAN>.<SPAN style="COLOR: black">FindByID</SPAN>(<SPAN style="COLOR: blue">int</SPAN>.<SPAN style="COLOR: black">Parse</SPAN>(<SPAN style="COLOR: black">idTextBox</SPAN>.<SPAN style="COLOR: black">Text</SPAN>));<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: black">MessageBox</SPAN>.<SPAN style="COLOR: black">Show</SPAN>(<SPAN style="COLOR: black">row</SPAN>.<SPAN style="COLOR: black">name</SPAN>, "Subscriber");<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'">}<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt"><o:p></o:p><FONT size=2><FONT size=3></FONT>&nbsp;</P></FONT></p>
  		<p style="MARGIN-RIGHT: 0px">
			<font size="2"><SPAN 
style="FONT-SIZE: 12pt; FONT-FAMILY: 'Times New Roman'; mso-fareast-font-family: 'Times New Roman'; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA">
		</p>
<H1>Feedback</H1>
<P><A href="mailto:askthewonk@sellsbrothers.com?subject=Feedback on 'What's the difference between typed dataset and untyped dataset?'">I have 
feedback on this Ask The Wonk answer</A></P></SPAN></FONT></body>
</html>

