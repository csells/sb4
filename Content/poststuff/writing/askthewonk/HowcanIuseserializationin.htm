<!-- Published by Fog Creek Software CityDesk MAYOWDQEAUJJTIIX/EB053B17/77 -->
<html>
<head>
	<title>How can I use serialization in conjuction with Isolated Storage?</title>
</head>
<body>

		    
<b>Q. So IsolatedStorage provides a assembly-user-specific read/write wrapper on a free form text file? I was hoping for some simple name=value handling ala SetPrivateProfileString, but I guess I have to invent my own format for these items. Am I missing something obvious here?</b>
<p>
<i>Asked by Anne Brumme. Answered by the Wonk on February 7, 2003</i>
<P style="MARGIN-RIGHT: 0px">
		 </P>
		  
		<p style="MARGIN-RIGHT: 0px"><b>A.</b> <P class=Body style="MARGIN: 0in 0in 0pt"><I style="mso-bidi-font-style: normal">Serialization</I> is the ability to read and write an arbitrary object graph (although reading is sometimes called <I style="mso-bidi-font-style: normal">deserialization</I>). When you've got an isolated storage stream, or any other stream for that matter, it's serialization that lets you save anything, from simple name-value pairs to entire object hierarchies. However, before we can talk about serializing objects, we need to talk about where they’re going to serialize to.</P>
<P class=HD style="MARGIN: 0.25in 0in 4pt"><STRONG>Streams</STRONG></P>
<P class=Body style="MARGIN: 0in 0in 0pt">Whenever an object is serialized, it has to go somewhere. It may go into memory, a file, a database record or a socket. Where the data is actually written generally does matter to the object itself. It needs to store the same data regardless of where it goes. All the object generally cares about is that bytes can be written and read and something we’d like to skip around amongst the bytes. This need manifests itself in the abstract base class Stream from the System.IO namespace:</P>
<P class=Body style="MARGIN: 0in 0in 0pt"><?xml:namespace prefix = o ns = "urn:schemas-microsoft-com:office:office" /><o:p>&nbsp;</o:p></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><FONT size=2><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">abstract</SPAN><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"> <SPAN style="COLOR: blue">class</SPAN> <B style="mso-bidi-font-weight: normal"><SPAN style="COLOR: black">Stream</SPAN> </B>: <SPAN style="COLOR: black">MarshalByRefObject</SPAN>, <SPAN style="COLOR: black">IDisposable</SPAN> {<o:p></o:p></SPAN></FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: green">// Fields<o:p></o:p></SPAN></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: blue">static</SPAN> <SPAN style="COLOR: blue">readonly</SPAN> <SPAN style="COLOR: black">System</SPAN>.<SPAN style="COLOR: black">IO</SPAN>.<SPAN style="COLOR: black">Stream</SPAN> <SPAN style="COLOR: black">Null</SPAN>;<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><o:p><FONT size=2>&nbsp;</FONT></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: green">// Properties<o:p></o:p></SPAN></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: blue">bool</SPAN> <SPAN style="COLOR: black">CanRead</SPAN> { <SPAN style="COLOR: blue">virtual</SPAN> <SPAN style="COLOR: blue">get</SPAN>; }<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: blue">bool</SPAN> <SPAN style="COLOR: black">CanSeek</SPAN> { <SPAN style="COLOR: blue">virtual</SPAN> <SPAN style="COLOR: blue">get</SPAN>; }<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: blue">bool</SPAN> <SPAN style="COLOR: black">CanWrite</SPAN> { <SPAN style="COLOR: blue">virtual</SPAN> <SPAN style="COLOR: blue">get</SPAN>; }<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: blue">long</SPAN> <SPAN style="COLOR: black">Length</SPAN> { <SPAN style="COLOR: blue">virtual</SPAN> <SPAN style="COLOR: blue">get</SPAN>; }<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: blue">long</SPAN> <SPAN style="COLOR: black">Position</SPAN> { <SPAN style="COLOR: blue">virtual</SPAN> <SPAN style="COLOR: blue">get</SPAN>; <SPAN style="COLOR: blue">virtual</SPAN> <SPAN style="COLOR: blue">set</SPAN>; }<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><o:p><FONT size=2>&nbsp;</FONT></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: green">// Methods<o:p></o:p></SPAN></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: blue">virtual</SPAN> <SPAN style="COLOR: black">IAsyncResult</SPAN> <SPAN style="COLOR: black">BeginRead</SPAN>(...);<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: blue">virtual</SPAN> <SPAN style="COLOR: black">IAsyncResult</SPAN> <SPAN style="COLOR: black">BeginWrite</SPAN>(...);<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: blue">virtual</SPAN> <SPAN style="COLOR: blue">void</SPAN> <SPAN style="COLOR: black">Close</SPAN>();<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: blue">virtual</SPAN> <SPAN style="COLOR: blue">int</SPAN> <SPAN style="COLOR: black">EndRead</SPAN>(<SPAN style="COLOR: black">IAsyncResult</SPAN> <SPAN style="COLOR: black">asyncResult</SPAN>);<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: blue">virtual</SPAN> <SPAN style="COLOR: blue">void</SPAN> <SPAN style="COLOR: black">EndWrite</SPAN>(<SPAN style="COLOR: black">IAsyncResult</SPAN> <SPAN style="COLOR: black">asyncResult</SPAN>);<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: blue">virtual</SPAN> <SPAN style="COLOR: blue">void</SPAN> <SPAN style="COLOR: black">Flush</SPAN>();<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: blue">virtual</SPAN> <SPAN style="COLOR: blue">int</SPAN> <SPAN style="COLOR: black">Read</SPAN>(<SPAN style="COLOR: blue">byte</SPAN>[] <SPAN style="COLOR: black">buffer</SPAN>, <SPAN style="COLOR: blue">int</SPAN> <SPAN style="COLOR: black">offset</SPAN>, <SPAN style="COLOR: blue">int</SPAN> <SPAN style="COLOR: black">count</SPAN>);<o:p></o:p></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: blue">virtual</SPAN> <SPAN style="COLOR: blue">int</SPAN> <SPAN style="COLOR: black">ReadByte</SPAN>();<o:p></o:p></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: blue">virtual</SPAN> <SPAN style="COLOR: blue">long</SPAN> <SPAN style="COLOR: black">Seek</SPAN>(<SPAN style="COLOR: blue">long</SPAN> <SPAN style="COLOR: black">offset</SPAN>, <SPAN style="COLOR: black">System</SPAN>.<SPAN style="COLOR: black">IO</SPAN>.<SPAN style="COLOR: black">SeekOrigin</SPAN> <SPAN style="COLOR: black">origin</SPAN>);<o:p></o:p></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: blue">virtual</SPAN> <SPAN style="COLOR: blue">void</SPAN> <SPAN style="COLOR: black">SetLength</SPAN>(<SPAN style="COLOR: blue">long</SPAN> <SPAN style="COLOR: blue">value</SPAN>);<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: blue">virtual</SPAN> <SPAN style="COLOR: blue">void</SPAN> <SPAN style="COLOR: black">Write</SPAN>(<SPAN style="COLOR: blue">byte</SPAN>[] <SPAN style="COLOR: black">buffer</SPAN>, <SPAN style="COLOR: blue">int</SPAN> <SPAN style="COLOR: black">offset</SPAN>, <SPAN style="COLOR: blue">int</SPAN> <SPAN style="COLOR: black">count</SPAN>);<o:p></o:p></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: blue">virtual</SPAN> <SPAN style="COLOR: blue">void</SPAN> <SPAN style="COLOR: black">WriteByte</SPAN>(<SPAN style="COLOR: blue">byte</SPAN> <SPAN style="COLOR: blue">value</SPAN>);<o:p></o:p></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2>}<o:p></o:p></FONT></SPAN></P>
<P class=Body style="MARGIN: 0in 0in 0pt"><o:p>&nbsp;</o:p></P>
<P class=Body style="MARGIN: 0in 0in 0pt">.NET provides several classes that derive from Stream, including MemoryStream, FileStream and IsolatedStorageFileStream. The MemoryStream is fun to play with because it has no permanent side effects:</P>
<P class=Body style="MARGIN: 0in 0in 0pt"><o:p>&nbsp;</o:p></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><FONT size=2><B style="mso-bidi-font-weight: normal"><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">using</SPAN></B><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"> <SPAN style="COLOR: black">System</SPAN>.<SPAN style="COLOR: black">IO</SPAN>;<o:p></o:p></SPAN></B></FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2>...<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><FONT size=2><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">string</SPAN><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"> <SPAN style="COLOR: black">s</SPAN> = "Wahoo!";<o:p></o:p></SPAN></FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><FONT size=2><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">int</SPAN><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"> <SPAN style="COLOR: black">n</SPAN> = 452;<o:p></o:p></SPAN></FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><FONT size=2><B style="mso-bidi-font-weight: normal"><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">using</SPAN></B><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">( <SPAN style="COLOR: black">Stream</SPAN> <SPAN style="COLOR: black">stream</SPAN> = <SPAN style="COLOR: blue">new</SPAN> <SPAN style="COLOR: black">MemoryStream</SPAN>() ) {<o:p></o:p></SPAN></B></FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: green">// Write to the stream<o:p></o:p></SPAN></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">byte</SPAN>[] <SPAN style="COLOR: black">bytes1</SPAN> = <SPAN style="COLOR: black">UnicodeEncoding</SPAN>.<SPAN style="COLOR: black">Unicode</SPAN>.<SPAN style="COLOR: black">GetBytes</SPAN>(<SPAN style="COLOR: black">s</SPAN>);<o:p></o:p></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">byte</SPAN>[] <SPAN style="COLOR: black">bytes2</SPAN> = <SPAN style="COLOR: black">BitConverter</SPAN>.<SPAN style="COLOR: black">GetBytes</SPAN>(<SPAN style="COLOR: black">n</SPAN>);<o:p></o:p></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: black">stream</SPAN>.<SPAN style="COLOR: black">Write</SPAN>(<SPAN style="COLOR: black">bytes1</SPAN>, 0, <SPAN style="COLOR: black">bytes1</SPAN>.<SPAN style="COLOR: black">Length</SPAN>);<o:p></o:p></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: black">stream</SPAN>.<SPAN style="COLOR: black">Write</SPAN>(<SPAN style="COLOR: black">bytes2</SPAN>, 0, <SPAN style="COLOR: black">bytes2</SPAN>.<SPAN style="COLOR: black">Length</SPAN>);<o:p></o:p></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><o:p><FONT size=2>&nbsp;</FONT></o:p></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: green">// Reset the stream to the beginning<o:p></o:p></SPAN></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: black">stream</SPAN>.<SPAN style="COLOR: black">Seek</SPAN>(0, <SPAN style="COLOR: black">SeekOrigin</SPAN>.<SPAN style="COLOR: black">Begin</SPAN>);<o:p></o:p></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><o:p><FONT size=2>&nbsp;</FONT></o:p></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: green">// Read from the stream<o:p></o:p></SPAN></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">byte</SPAN>[] <SPAN style="COLOR: black">bytes3</SPAN> = <SPAN style="COLOR: blue">new</SPAN> <SPAN style="COLOR: blue">byte</SPAN>[<SPAN style="COLOR: black">stream</SPAN>.<SPAN style="COLOR: black">Length</SPAN> - 4];<o:p></o:p></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">byte</SPAN>[] <SPAN style="COLOR: black">bytes4</SPAN> = <SPAN style="COLOR: blue">new</SPAN> <SPAN style="COLOR: blue">byte</SPAN>[4];<o:p></o:p></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: black">stream</SPAN>.<SPAN style="COLOR: black">Read</SPAN>(<SPAN style="COLOR: black">bytes3</SPAN>, 0, <SPAN style="COLOR: black">bytes3</SPAN>.<SPAN style="COLOR: black">Length</SPAN>);<o:p></o:p></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: black">stream</SPAN>.<SPAN style="COLOR: black">Read</SPAN>(<SPAN style="COLOR: black">bytes4</SPAN>, 0, <SPAN style="COLOR: black">bytes4</SPAN>.<SPAN style="COLOR: black">Length</SPAN>);<o:p></o:p></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><o:p><FONT size=2>&nbsp;</FONT></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: green">// Do something with the data<o:p></o:p></SPAN></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: black">MessageBox</SPAN>.<SPAN style="COLOR: black">Show</SPAN>(<B style="mso-bidi-font-weight: normal"><SPAN style="COLOR: black">UnicodeEncoding</SPAN>.<SPAN style="COLOR: black">Unicode</SPAN>.<SPAN style="COLOR: black">GetString</SPAN>(<SPAN style="COLOR: black">bytes3</SPAN>)</B> + " " +<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN><B style="mso-bidi-font-weight: normal"><SPAN style="mso-spacerun: yes">&nbsp;</SPAN><SPAN style="COLOR: black">BitConverter</SPAN>.<SPAN style="COLOR: black">ToInt32</SPAN>(<SPAN style="COLOR: black">bytes4</SPAN>, 0));<o:p></o:p></B></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2>}<o:p></o:p></FONT></SPAN></B></P>
<P class=Body style="MARGIN: 0in 0in 0pt"><o:p>&nbsp;</o:p></P>
<P class=Body style="MARGIN: 0in 0in 0pt">This code creates a specific implementation of the abstract Stream class, making sure to close it, even in the face of exceptions. The code then uses the stream for writing and reading bytes, being careful to seek back to the beginning of the stream in between. We could have written the exact same code for any stream.</P>
<P class=Body style="MARGIN: 0in 0in 0pt">&nbsp;</P>
<P class=Body style="MARGIN: 0in 0in 0pt">However, the manual conversion of the string object back and forth between the bytes is kind of a pain. To avoid writing that code, we’ve got the StreamWriter and StreamReader classes:</P>
<P class=Body style="MARGIN: 0in 0in 0pt"><o:p>&nbsp;</o:p></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><FONT size=2><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">string</SPAN><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"> <SPAN style="COLOR: black">s</SPAN> = "Wahoo!";<o:p></o:p></SPAN></FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><FONT size=2><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">int</SPAN><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"> <SPAN style="COLOR: black">n</SPAN> = 452;<o:p></o:p></SPAN></FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><FONT size=2><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">using</SPAN><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">( <SPAN style="COLOR: black">Stream</SPAN> <SPAN style="COLOR: black">stream</SPAN> = <SPAN style="COLOR: blue">new</SPAN> <SPAN style="COLOR: black">MemoryStream</SPAN>() ) {<o:p></o:p></SPAN></FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><o:p><FONT size=2>&nbsp;</FONT></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: green">// Write to the stream<o:p></o:p></SPAN></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: black">StreamWriter</SPAN> <SPAN style="COLOR: black">writer</SPAN> = <SPAN style="COLOR: blue">new</SPAN> <SPAN style="COLOR: black">StreamWriter</SPAN>(<SPAN style="COLOR: black">stream</SPAN>);<o:p></o:p></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: black">writer</SPAN>.<SPAN style="COLOR: black">WriteLine</SPAN>(<SPAN style="COLOR: black">s</SPAN>);<o:p></o:p></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: black">writer</SPAN>.<SPAN style="COLOR: black">WriteLine</SPAN>(<SPAN style="COLOR: black">n</SPAN>);<o:p></o:p></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: black">writer</SPAN>.<SPAN style="COLOR: black">Flush</SPAN>(); <SPAN style="COLOR: green">// Flush the buffer<o:p></o:p></SPAN></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="COLOR: green; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><o:p><FONT size=2>&nbsp;</FONT></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: green">// Reset the stream to the beginning<o:p></o:p></SPAN></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: black">stream</SPAN>.<SPAN style="COLOR: black">Seek</SPAN>(0, <SPAN style="COLOR: black">SeekOrigin</SPAN>.<SPAN style="COLOR: black">Begin</SPAN>);<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><o:p><FONT size=2>&nbsp;</FONT></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: green">// Read from the stream<o:p></o:p></SPAN></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: black">StreamReader</SPAN> <SPAN style="COLOR: black">reader</SPAN> = <SPAN style="COLOR: blue">new</SPAN> <SPAN style="COLOR: black">StreamReader</SPAN>(<SPAN style="COLOR: black">stream</SPAN>);<o:p></o:p></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">string</SPAN> <SPAN style="COLOR: black">s2</SPAN> = <SPAN style="COLOR: black">reader</SPAN>.<SPAN style="COLOR: black">ReadLine</SPAN>();<o:p></o:p></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">int</SPAN> <SPAN style="COLOR: black">n2</SPAN> = <SPAN style="COLOR: blue">int</SPAN>.<SPAN style="COLOR: black">Parse</SPAN>(<SPAN style="COLOR: black">reader</SPAN>.<SPAN style="COLOR: black">ReadLine</SPAN>());<o:p></o:p></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><o:p><FONT size=2>&nbsp;</FONT></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: green">// Do something with the data<o:p></o:p></SPAN></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: black">MessageBox</SPAN>.<SPAN style="COLOR: black">Show</SPAN>(<SPAN style="COLOR: black">s2</SPAN> + " " + <SPAN style="COLOR: black">n2</SPAN>);<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2>}<o:p></o:p></FONT></SPAN></P>
<P class=Body style="MARGIN: 0in 0in 0pt"><o:p>&nbsp;</o:p></P>
<P class=Body style="MARGIN: 0in 0in 0pt">This code is considerably simpler since the conversion to bytes is managed by the stream writer and readers as they work on the stream. However, the stream writer and readers as oriented towards text only, which is why we wrote each piece of data on its own line and why we had to parse the integer back out of the string when reading. To avoid the conversion to and from strings, we can write the data in its native binary format and pull it out typed using the BinaryWriter and BinaryReader classes:</P>
<P class=Body style="MARGIN: 0in 0in 0pt"><o:p>&nbsp;</o:p></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><FONT size=2><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">string</SPAN><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"> <SPAN style="COLOR: black">s</SPAN> = "Wahoo!";<o:p></o:p></SPAN></FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><FONT size=2><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">int</SPAN><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"> <SPAN style="COLOR: black">n</SPAN> = 452;<o:p></o:p></SPAN></FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><FONT size=2><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">using</SPAN><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">( <SPAN style="COLOR: black">Stream</SPAN> <SPAN style="COLOR: black">stream</SPAN> = <SPAN style="COLOR: blue">new</SPAN> <SPAN style="COLOR: black">MemoryStream</SPAN>() ) {<o:p></o:p></SPAN></FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><o:p><FONT size=2>&nbsp;</FONT></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: green">// Write to the stream<o:p></o:p></SPAN></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: black">BinaryWriter</SPAN> <SPAN style="COLOR: black">writer</SPAN> = <SPAN style="COLOR: blue">new</SPAN> <SPAN style="COLOR: black">BinaryWriter</SPAN>(<SPAN style="COLOR: black">stream</SPAN>);<o:p></o:p></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: black">writer</SPAN>.<SPAN style="COLOR: black">Write</SPAN>(<SPAN style="COLOR: black">s</SPAN>);<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: black">writer</SPAN>.<SPAN style="COLOR: black">Write</SPAN>(<SPAN style="COLOR: black">s</SPAN>);<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: black">writer</SPAN>.<SPAN style="COLOR: black">Flush</SPAN>(); <SPAN style="COLOR: green">// Flush the buffer<o:p></o:p></SPAN></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="COLOR: green; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><o:p><FONT size=2>&nbsp;</FONT></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: green">// Reset the stream to the beginning<o:p></o:p></SPAN></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: black">stream</SPAN>.<SPAN style="COLOR: black">Seek</SPAN>(0, <SPAN style="COLOR: black">SeekOrigin</SPAN>.<SPAN style="COLOR: black">Begin</SPAN>);<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><o:p><FONT size=2>&nbsp;</FONT></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: green">// Read from the stream<o:p></o:p></SPAN></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: black">BinaryReader</SPAN> <SPAN style="COLOR: black">reader</SPAN> = <SPAN style="COLOR: blue">new</SPAN> <SPAN style="COLOR: black">BinaryReader</SPAN>(<SPAN style="COLOR: black">stream</SPAN>);<o:p></o:p></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">string</SPAN> <SPAN style="COLOR: black">s2</SPAN> = <SPAN style="COLOR: black">reader</SPAN>.<SPAN style="COLOR: black">ReadString</SPAN>();<o:p></o:p></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">int</SPAN> <SPAN style="COLOR: black">n2</SPAN> = <SPAN style="COLOR: black">reader</SPAN>.<SPAN style="COLOR: black">ReadInt32</SPAN>();<o:p></o:p></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><o:p><FONT size=2>&nbsp;</FONT></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: green">// Do something with the data<o:p></o:p></SPAN></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: black">MessageBox</SPAN>.<SPAN style="COLOR: black">Show</SPAN>(<SPAN style="COLOR: black">s2</SPAN> + " " + <SPAN style="COLOR: black">n2</SPAN>);<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2>}<o:p></o:p></FONT></SPAN></P>
<P class=Body style="MARGIN: 0in 0in 0pt"><o:p>&nbsp;</o:p></P>
<P class=Body style="MARGIN: 0in 0in 0pt">Using the BinaryWriter and BinaryReader, there was no string conversion, but our code still had to keep track of the types of the objects we were writing and the order in which they needed to be read. We could group the data into a custom class and read it all at once, but the BinaryWriter and BinaryReader don’t support custom classes, only built-in simple types. To read and write arbitrary objects, we need a formatter.</P>
<P class=HD style="MARGIN: 0.25in 0in 4pt"><STRONG>Formatters</STRONG></P>
<P class=Body style="MARGIN: 0in 0in 0pt">A <I style="mso-bidi-font-style: normal">formatter</I> is an object that knows how to write arbitrary objects to a stream. The formatter promises to provide this functionality by implementing the IFormatter information from the System.Runtime.Serialization namespace:</P>
<P class=Body style="MARGIN: 0in 0in 0pt"><o:p>&nbsp;</o:p></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><FONT size=2><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">interface</SPAN><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"> <SPAN style="COLOR: black">IFormatter</SPAN> {<o:p></o:p></SPAN></FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: green">// Properties<o:p></o:p></SPAN></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: black">SerializationBinder</SPAN> <SPAN style="COLOR: black">Binder</SPAN> { <SPAN style="COLOR: blue">get</SPAN>; <SPAN style="COLOR: blue">set</SPAN>; }<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: black">StreamingContext</SPAN> <SPAN style="COLOR: black">Context</SPAN> { <SPAN style="COLOR: blue">get</SPAN>; <SPAN style="COLOR: blue">set</SPAN>; }<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: black">ISurrogateSelector</SPAN> <SPAN style="COLOR: black">SurrogateSelector</SPAN> { <SPAN style="COLOR: blue">get</SPAN>; <SPAN style="COLOR: blue">set</SPAN>; }<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><o:p><FONT size=2>&nbsp;</FONT></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: green">// Methods<o:p></o:p></SPAN></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">object</SPAN> <SPAN style="COLOR: black">Deserialize</SPAN>(<SPAN style="COLOR: black">Stream</SPAN> <SPAN style="COLOR: black">serializationStream</SPAN>);<o:p></o:p></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">void</SPAN> <SPAN style="COLOR: black">Serialize</SPAN>(<SPAN style="COLOR: black">Stream</SPAN> <SPAN style="COLOR: black">serializationStream</SPAN>, <SPAN style="COLOR: blue">object</SPAN> <SPAN style="COLOR: black">graph</SPAN>);<o:p></o:p></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2>}<o:p></o:p></FONT></SPAN></P>
<P class=Body style="MARGIN: 0in 0in 0pt"><o:p>&nbsp;</o:p></P>
<P class=Body style="MARGIN: 0in 0in 0pt">A formatter has two jobs. The first is to serialize arbitrary objects, including their fields and their fields, all the way down. It knows which fields to serialize using Reflection, which is the .NET API for finding out type information about a type at run-time. An object is written to a stream with the Serialize method and read from a stream with the Deserialize method.</P>
<P class=Body style="MARGIN: 0in 0in 0pt">&nbsp;</P>
<P class=Body style="MARGIN: 0in 0in 0pt">The second job of a formatter is to translate the data into some format at the byte level. The .NET Framework provides two formatters, the BinaryFormatter and the SoapFormatter.</P>
<P class=Body style="MARGIN: 0in 0in 0pt">&nbsp;</P>
<P class=Body style="MARGIN: 0in 0in 0pt">The BinaryFormatter, from the System.Runtime.Serialization.Formatters.Binary namespace, writes the data in a binary format, just like the BinaryWriter. The SoapFormatter, from the System.Runtime.Serialization.Formatters.Soap namespace, write data in XML according to the Simple Object Access Protocol (SOAP) Specification. While SOAP is the core protocol of web services, using the SOAP formatter for the purposes of serializing settings or document data has nothing to do with web services or even the web. However, it is a handy format for a human to read the data back out again.</P>
<P class=Body style="MARGIN: 0in 0in 0pt">&nbsp;</P>
<P class=Body style="MARGIN: 0in 0in 0pt">There is one stipulation on any type that a formatter is to serialize. It must be marked with the SerializableAttribute or the formatter will throw a run-time exception. Once the type (and the type of any contained field) is marked as serializable, serializing an object is a matter of creating a formatter and asking it to serialize the object:</P>
<P class=Body style="MARGIN: 0in 0in 0pt"><o:p>&nbsp;</o:p></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><FONT size=2><B style="mso-bidi-font-weight: normal"><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">using</SPAN></B><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"> <SPAN style="COLOR: black">System</SPAN>.<SPAN style="COLOR: black">Runtime</SPAN>.<SPAN style="COLOR: black">Serialization</SPAN>;<o:p></o:p></SPAN></B></FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><FONT size=2><B style="mso-bidi-font-weight: normal"><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">using</SPAN></B><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"> <SPAN style="COLOR: black">System</SPAN>.<SPAN style="COLOR: black">Runtime</SPAN>.<SPAN style="COLOR: black">Serialization</SPAN>.<SPAN style="COLOR: black">Formatters</SPAN>;<o:p></o:p></SPAN></B></FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><FONT size=2><B style="mso-bidi-font-weight: normal"><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">using</SPAN></B><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"> <SPAN style="COLOR: black">System</SPAN>.<SPAN style="COLOR: black">Runtime</SPAN>.<SPAN style="COLOR: black">Serialization</SPAN>.<SPAN style="COLOR: black">Formatters</SPAN>.<SPAN style="COLOR: black">Soap</SPAN>;<o:p></o:p></SPAN></B></FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2>...<o:p></o:p></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2>[<SPAN style="COLOR: black">SerializableAttribute</SPAN>]<o:p></o:p></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><FONT size=2><B style="mso-bidi-font-weight: normal"><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">class</SPAN></B><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"> <SPAN style="COLOR: black">MyData</SPAN> {<o:p></o:p></SPAN></B></FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: blue">string</SPAN> <SPAN style="COLOR: black">s</SPAN> = "Wahoo!";<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: blue">int</SPAN> <SPAN style="COLOR: black">n</SPAN> = 452;<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2>}<o:p></o:p></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><o:p><FONT size=2>&nbsp;</FONT></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><FONT size=2><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">static</SPAN><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"> <SPAN style="COLOR: blue">void</SPAN> <SPAN style="COLOR: black">DoSerialize</SPAN>() {<o:p></o:p></SPAN></FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: black">MyData</SPAN> <SPAN style="COLOR: black">data</SPAN> = <SPAN style="COLOR: blue">new</SPAN> <SPAN style="COLOR: black">MyData</SPAN>();<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">using</SPAN>( <SPAN style="COLOR: black">Stream</SPAN> <SPAN style="COLOR: black">stream</SPAN> =<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: blue">new</SPAN> <SPAN style="COLOR: black">FileStream</SPAN>(@"c:\temp\mydata.xml", <SPAN style="COLOR: black">FileMode</SPAN>.<SPAN style="COLOR: black">Create</SPAN>) ) {<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: green">// Write to the stream<o:p></o:p></SPAN></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: black">IFormatter</SPAN> <SPAN style="COLOR: black">formatter</SPAN> = <SPAN style="COLOR: blue">new</SPAN> <SPAN style="COLOR: black">SoapFormatter</SPAN>();<o:p></o:p></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: black">formatter</SPAN>.<SPAN style="COLOR: black">Serialize</SPAN>(<SPAN style="COLOR: black">stream</SPAN>, <SPAN style="COLOR: black">data</SPAN>);<o:p></o:p></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><o:p><FONT size=2>&nbsp;</FONT></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: green">// Reset the stream to the beginning<o:p></o:p></SPAN></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: black">stream</SPAN>.<SPAN style="COLOR: black">Seek</SPAN>(0, <SPAN style="COLOR: black">SeekOrigin</SPAN>.<SPAN style="COLOR: black">Begin</SPAN>);<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><o:p><FONT size=2>&nbsp;</FONT></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: green">// Read from the stream<o:p></o:p></SPAN></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: black">MyData</SPAN> <SPAN style="COLOR: black">data2</SPAN> = (<SPAN style="COLOR: black">MyData</SPAN>)<SPAN style="COLOR: black">formatter</SPAN>.<SPAN style="COLOR: black">Deserialize</SPAN>(<SPAN style="COLOR: black">stream</SPAN>);<o:p></o:p></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><o:p><FONT size=2>&nbsp;</FONT></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: green">// Do something with the data<o:p></o:p></SPAN></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: black">MessageBox</SPAN>.<SPAN style="COLOR: black">Show</SPAN>(<SPAN style="COLOR: black">data2</SPAN>.<SPAN style="COLOR: black">s</SPAN> + " " + <SPAN style="COLOR: black">data2</SPAN>.<SPAN style="COLOR: black">n</SPAN>);<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp;</SPAN><SPAN style="mso-spacerun: yes">&nbsp;</SPAN>}<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2>}<o:p></o:p></FONT></SPAN></P>
<P class=Body style="MARGIN: 0in 0in 0pt"><o:p>&nbsp;</o:p></P>
<P class=Body style="MARGIN: 0in 0in 0pt">After creating the formatter, the code makes a call to Serialize, which writes the type information for the MyData object and then recursively writes all of the data for the fields of the object. Reading the object back out is accomplished with a call to Deserialize and a cast to the top-level object, which reads all fields recursively.</P>
<P class=Body style="MARGIN: 0in 0in 0pt">&nbsp;</P>
<P class=Body style="MARGIN: 0in 0in 0pt">Because we chose the SOAP formatter and a FileStream, we can examine the data that the formatter wrote:</P>
<P class=Body style="MARGIN: 0in 0in 0pt"><o:p>&nbsp;</o:p></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><FONT size=2><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">&lt;</SPAN><SPAN style="COLOR: maroon; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">SOAP-ENV:Envelope</SPAN><SPAN style="COLOR: fuchsia; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"> </SPAN><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">...<SPAN style="COLOR: blue">&gt;<o:p></o:p></SPAN></SPAN></FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><FONT size=2><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">&lt;</SPAN><SPAN style="COLOR: maroon; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">SOAP-ENV:Body</SPAN><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">&gt;<o:p></o:p></SPAN></FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><FONT size=2><SPAN lang=PL style="COLOR: blue; FONT-FAMILY: 'Courier New'; mso-ansi-language: PL; mso-bidi-font-family: 'Courier New'">&lt;</SPAN><SPAN lang=PL style="COLOR: maroon; FONT-FAMILY: 'Courier New'; mso-ansi-language: PL; mso-bidi-font-family: 'Courier New'">a1:<B style="mso-bidi-font-weight: normal">Form1_x002B_MyData</B></SPAN><SPAN lang=PL style="COLOR: fuchsia; FONT-FAMILY: 'Courier New'; mso-ansi-language: PL; mso-bidi-font-family: 'Courier New'"> </SPAN><SPAN lang=PL style="COLOR: red; FONT-FAMILY: 'Courier New'; mso-ansi-language: PL; mso-bidi-font-family: 'Courier New'">id</SPAN><SPAN lang=PL style="COLOR: blue; FONT-FAMILY: 'Courier New'; mso-ansi-language: PL; mso-bidi-font-family: 'Courier New'">="ref-1"</SPAN><SPAN lang=PL style="COLOR: maroon; FONT-FAMILY: 'Courier New'; mso-ansi-language: PL; mso-bidi-font-family: 'Courier New'"> </SPAN><SPAN lang=PL style="FONT-FAMILY: 'Courier New'; mso-ansi-language: PL; mso-bidi-font-family: 'Courier New'">...<SPAN style="COLOR: blue">&gt;<o:p></o:p></SPAN></SPAN></FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><FONT size=2><B style="mso-bidi-font-weight: normal"><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">&lt;</SPAN></B><B style="mso-bidi-font-weight: normal"><SPAN style="COLOR: maroon; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">s</SPAN></B><B style="mso-bidi-font-weight: normal"><SPAN style="COLOR: fuchsia; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"> </SPAN></B><B style="mso-bidi-font-weight: normal"><SPAN style="COLOR: red; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">id</SPAN></B><B style="mso-bidi-font-weight: normal"><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">="ref-3"&gt;</SPAN></B><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">Wahoo!<SPAN style="COLOR: blue">&lt;/</SPAN><SPAN style="COLOR: maroon">s</SPAN><SPAN style="COLOR: blue">&gt;<o:p></o:p></SPAN></SPAN></B></FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><FONT size=2><B style="mso-bidi-font-weight: normal"><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">&lt;</SPAN></B><B style="mso-bidi-font-weight: normal"><SPAN style="COLOR: maroon; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">n</SPAN></B><B style="mso-bidi-font-weight: normal"><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">&gt;</SPAN></B><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">452<SPAN style="COLOR: blue">&lt;/</SPAN><SPAN style="COLOR: maroon">n</SPAN><SPAN style="COLOR: blue">&gt;<o:p></o:p></SPAN></SPAN></B></FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><FONT size=2><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">&lt;/</SPAN><SPAN style="COLOR: maroon; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">a1:<B style="mso-bidi-font-weight: normal">Form1_x002B_MyData</B></SPAN><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">&gt;<o:p></o:p></SPAN></FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><FONT size=2><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">&lt;/</SPAN><SPAN style="COLOR: maroon; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">SOAP-ENV:Body</SPAN><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">&gt;<o:p></o:p></SPAN></FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><FONT size=2><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">&lt;/</SPAN><SPAN style="COLOR: maroon; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">SOAP-ENV:Envelope</SPAN><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">&gt;<o:p></o:p></SPAN></FONT></P>
<P class=Body style="MARGIN: 0in 0in 0pt"><o:p>&nbsp;</o:p></P>
<P class=Body style="MARGIN: 0in 0in 0pt">Here we can see that an instance of Form1.MyData was written and that it contains two fields, one called s with a value “Wahoo!” and one called n with a value “452”, which was just what the code meant to write.</P>
<P class=HE style="MARGIN: 6pt 0in 0pt"><EM>Non-Serialized</EM></P>
<P class=Body style="MARGIN: 0in 0in 0pt">We have some control over what the formatter writes, although probably not the way that you’d expect. For example, if we decide that we want to serialize the MyData class, but not the n field, we can’t stop the formatter by marking the field as protected or private. To be consistent at deserialization, an object is going to need the protected and private fields just as much as it needs the public ones (in fact, fields shouldn’t be public at all!). However, applying the NonSerializedAttribute to a field will cause it to be skipped by the formatter:</P>
<P class=Body style="MARGIN: 0in 0in 0pt"><o:p>&nbsp;</o:p></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2>[<SPAN style="COLOR: black">SerializableAttribute</SPAN>]<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><FONT size=2><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">class</SPAN><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"> <SPAN style="COLOR: black">MyData</SPAN> {<o:p></o:p></SPAN></FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: blue">string</SPAN> <SPAN style="COLOR: black">s</SPAN> = "Wahoo!";<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><B style="mso-bidi-font-weight: normal">[<SPAN style="COLOR: black">NonSerialized</SPAN>]</B> <SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: blue">int</SPAN> <SPAN style="COLOR: black">n</SPAN> = 452;<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2>}<o:p></o:p></FONT></SPAN></P>
<P class=Body style="MARGIN: 0in 0in 0pt"><o:p>&nbsp;</o:p></P>
<P class=Body style="MARGIN: 0in 0in 0pt">Serializing an instance of this type shows that the formatted is skipping the non-serialized field:</P>
<P class=Body style="MARGIN: 0in 0in 0pt"><o:p>&nbsp;</o:p></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><FONT size=2><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">&lt;</SPAN><SPAN style="COLOR: maroon; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">SOAP-ENV:Envelope</SPAN><SPAN style="COLOR: fuchsia; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"> </SPAN><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">...<SPAN style="COLOR: blue">&gt;<o:p></o:p></SPAN></SPAN></FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><FONT size=2><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">&lt;</SPAN><SPAN style="COLOR: maroon; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">SOAP-ENV:Body</SPAN><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">&gt;<o:p></o:p></SPAN></FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><FONT size=2><SPAN lang=PL style="COLOR: blue; FONT-FAMILY: 'Courier New'; mso-ansi-language: PL; mso-bidi-font-family: 'Courier New'">&lt;</SPAN><SPAN lang=PL style="COLOR: maroon; FONT-FAMILY: 'Courier New'; mso-ansi-language: PL; mso-bidi-font-family: 'Courier New'">a1:<B style="mso-bidi-font-weight: normal">Form1_x002B_MyData</B></SPAN><SPAN lang=PL style="COLOR: fuchsia; FONT-FAMILY: 'Courier New'; mso-ansi-language: PL; mso-bidi-font-family: 'Courier New'"> </SPAN><SPAN lang=PL style="COLOR: red; FONT-FAMILY: 'Courier New'; mso-ansi-language: PL; mso-bidi-font-family: 'Courier New'">id</SPAN><SPAN lang=PL style="COLOR: blue; FONT-FAMILY: 'Courier New'; mso-ansi-language: PL; mso-bidi-font-family: 'Courier New'">="ref-1"</SPAN><SPAN lang=PL style="COLOR: maroon; FONT-FAMILY: 'Courier New'; mso-ansi-language: PL; mso-bidi-font-family: 'Courier New'"> </SPAN><SPAN lang=PL style="FONT-FAMILY: 'Courier New'; mso-ansi-language: PL; mso-bidi-font-family: 'Courier New'">...<SPAN style="COLOR: blue">&gt;<o:p></o:p></SPAN></SPAN></FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><FONT size=2><B style="mso-bidi-font-weight: normal"><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">&lt;</SPAN></B><B style="mso-bidi-font-weight: normal"><SPAN style="COLOR: maroon; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">s</SPAN></B><B style="mso-bidi-font-weight: normal"><SPAN style="COLOR: fuchsia; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"> </SPAN></B><B style="mso-bidi-font-weight: normal"><SPAN style="COLOR: red; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">id</SPAN></B><B style="mso-bidi-font-weight: normal"><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">="ref-3"&gt;</SPAN></B><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">Wahoo!<SPAN style="COLOR: blue">&lt;/</SPAN><SPAN style="COLOR: maroon">s</SPAN><SPAN style="COLOR: blue">&gt;<o:p></o:p></SPAN></SPAN></B></FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><FONT size=2><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">&lt;/</SPAN><SPAN style="COLOR: maroon; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">a1:<B style="mso-bidi-font-weight: normal">Form1_x002B_MyData</B></SPAN><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">&gt;<o:p></o:p></SPAN></FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><FONT size=2><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">&lt;/</SPAN><SPAN style="COLOR: maroon; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">SOAP-ENV:Body</SPAN><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">&gt;<o:p></o:p></SPAN></FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><FONT size=2><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">&lt;/</SPAN><SPAN style="COLOR: maroon; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">SOAP-ENV:Envelope</SPAN><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">&gt;<o:p></o:p></SPAN></FONT></P>
<P class=HE style="MARGIN: 6pt 0in 0pt"><EM>IDeserializationCallback</EM></P>
<P class=Body style="MARGIN: 0in 0in 0pt">Good candidates for the non-serialized attribute are fields that are calculated, cached or transient, since they don’t need to be stored. However, when an object is deserialized, the non-serialized fields may need to be recalculated to put the object into a valid state. For example, expanding the duties of the n field of the MyData type to be a cache of the s field’s length, there’s no need to persist n, as it can be recalculated at any time.</P>
<P class=Body style="MARGIN: 0in 0in 0pt">&nbsp;</P>
<P class=Body style="MARGIN: 0in 0in 0pt">However, the MyData object needs to be notified with s changes to keep n valid. Using properties keeps the n and s fields controlled until an object is deserialized and only s is set, but not using a property. MyData can implement IDeserializationCallback to get that notification:</P>
<P class=Body style="MARGIN: 0in 0in 0pt"><o:p>&nbsp;</o:p></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2>[<SPAN style="COLOR: black">SerializableAttribute</SPAN>]<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><FONT size=2><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">class</SPAN><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"> <SPAN style="COLOR: black">MyData</SPAN> : <B style="mso-bidi-font-weight: normal"><SPAN style="COLOR: black">IDeserializationCallback</SPAN> </B>{<o:p></o:p></SPAN></FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">string</SPAN> <SPAN style="COLOR: black">s</SPAN> = "Wahoo!";<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><B style="mso-bidi-font-weight: normal">[<SPAN style="COLOR: black">NonSerialized</SPAN>] </B><SPAN style="COLOR: blue">int</SPAN> <SPAN style="COLOR: black">n</SPAN> = 6;<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><o:p><FONT size=2>&nbsp;</FONT></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: blue">string</SPAN> <SPAN style="COLOR: black">String</SPAN> {<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: blue">get</SPAN> { <SPAN style="COLOR: blue">return</SPAN> <SPAN style="COLOR: black">s</SPAN>; }<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: blue">set</SPAN> { <SPAN style="COLOR: blue">value</SPAN> = <SPAN style="COLOR: black">s</SPAN>; <SPAN style="COLOR: black">n</SPAN> = <SPAN style="COLOR: black">s</SPAN>.<SPAN style="COLOR: black">Length</SPAN>; }<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>}<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><o:p><FONT size=2>&nbsp;</FONT></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: blue">int</SPAN> <SPAN style="COLOR: black">Length</SPAN> {<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: blue">get</SPAN> { <SPAN style="COLOR: blue">return</SPAN> <SPAN style="COLOR: black">n</SPAN>; }<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>}<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><o:p><FONT size=2>&nbsp;</FONT></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><FONT size=2><B style="mso-bidi-font-weight: normal"><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>#region</SPAN></B><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"> Implementation of IDeserializationCallback<o:p></o:p></SPAN></B></FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: blue">void</SPAN> <SPAN style="COLOR: black">OnDeserialization</SPAN>(<SPAN style="COLOR: blue">object</SPAN> <SPAN style="COLOR: black">sender</SPAN>) {<o:p></o:p></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: green">// Cache the string's length<o:p></o:p></SPAN></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: black">n</SPAN> = <SPAN style="COLOR: black">s</SPAN>.<SPAN style="COLOR: black">Length</SPAN>;<o:p></o:p></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>}<o:p></o:p></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>#endregion<o:p></o:p></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2>}<o:p></o:p></FONT></SPAN></P>
<P class=Body style="MARGIN: 0in 0in 0pt"><o:p>&nbsp;</o:p></P>
<P class=Body style="MARGIN: 0in 0in 0pt">If you’ve got any fields marked as non-serialized, chances are you should be handling IDeserializationCallback to set those fields at deserialization-time.<o:p></o:p></P>
<P class=HE style="MARGIN: 6pt 0in 0pt"><EM>ISerializable<o:p></o:p></EM></P>
<P class=Body style="MARGIN: 0in 0in 0pt">To gain even more control over the serialization process, you can implement the ISerializable interface and a special constructor:</P>
<P class=Body style="MARGIN: 0in 0in 0pt"><o:p>&nbsp;</o:p></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2>[<SPAN style="COLOR: black">SerializableAttribute</SPAN>]<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><FONT size=2><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">class</SPAN><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"> <SPAN style="COLOR: black">MyData</SPAN> : <B style="mso-bidi-font-weight: normal"><SPAN style="COLOR: black">ISerializable</SPAN> </B>{<o:p></o:p></SPAN></FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">string</SPAN> <SPAN style="COLOR: black">s</SPAN> = "Wahoo!";<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">int</SPAN> <SPAN style="COLOR: black">n</SPAN> = 6;<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><o:p><FONT size=2>&nbsp;</FONT></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: blue">string</SPAN> <SPAN style="COLOR: black">String</SPAN> {<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: blue">get</SPAN> { <SPAN style="COLOR: blue">return</SPAN> <SPAN style="COLOR: black">s</SPAN>; }<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: blue">set</SPAN> { <SPAN style="COLOR: blue">value</SPAN> = <SPAN style="COLOR: black">s</SPAN>; <SPAN style="COLOR: black">n</SPAN> = <SPAN style="COLOR: black">s</SPAN>.<SPAN style="COLOR: black">Length</SPAN>; }<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>}<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><o:p><FONT size=2>&nbsp;</FONT></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: blue">int</SPAN> <SPAN style="COLOR: black">Length</SPAN> {<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: blue">get</SPAN> { <SPAN style="COLOR: blue">return</SPAN> <SPAN style="COLOR: black">n</SPAN>; }<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>}<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><o:p><FONT size=2>&nbsp;</FONT></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: black">MyData</SPAN>() {}<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><o:p><FONT size=2>&nbsp;</FONT></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><FONT size=2><B style="mso-bidi-font-weight: normal"><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>#region</SPAN></B><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"> Implementation of ISerializable<o:p></o:p></SPAN></B></FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: black">MyData</SPAN>(<o:p></o:p></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: black">SerializationInfo</SPAN> <SPAN style="COLOR: black">info</SPAN>, <SPAN style="COLOR: black">StreamingContext</SPAN> <SPAN style="COLOR: black">context</SPAN>) {<o:p></o:p></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: green">// Get value from name/value pairs<o:p></o:p></SPAN></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: black">s</SPAN> = <SPAN style="COLOR: black">info</SPAN>.<SPAN style="COLOR: black">GetString</SPAN>("MyString");<o:p></o:p></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><o:p><FONT size=2>&nbsp;</FONT></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: green">// Cache the string's length<o:p></o:p></SPAN></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: black">n</SPAN> = <SPAN style="COLOR: black">s</SPAN>.<SPAN style="COLOR: black">Length</SPAN>;<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>}<o:p></o:p></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><o:p><FONT size=2>&nbsp;</FONT></o:p></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: blue">void</SPAN> <SPAN style="COLOR: black">GetObjectData</SPAN>(<o:p></o:p></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: black">SerializationInfo</SPAN> <SPAN style="COLOR: black">info</SPAN>, <SPAN style="COLOR: black">StreamingContext</SPAN> <SPAN style="COLOR: black">context</SPAN>) {<o:p></o:p></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: green">// Add value to name/value pairs<o:p></o:p></SPAN></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: black">info</SPAN>.<SPAN style="COLOR: black">AddValue</SPAN>("MyString", <SPAN style="COLOR: black">s</SPAN>);<o:p></o:p></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>}<o:p></o:p></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>#endregion<o:p></o:p></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2>}<o:p></o:p></FONT></SPAN></P>
<P class=Body style="MARGIN: 0in 0in 0pt"><o:p>&nbsp;</o:p></P>
<P class=Body style="MARGIN: 0in 0in 0pt">Implementing ISerializable.GetObjectData puts your class on the hook to populate the name/value pairs that the formatter is using to fill the stream during serialization. GetObjectData is provided with two pieces of information: a place to put the fields to serialize (called the <I style="mso-bidi-font-style: normal">serialization information</I>) and where the object is going (called the <I style="mso-bidi-font-style: normal">context state</I>). GetObjectData should add all of the fields to the serialization info that it would like to have serialized, naming each one. It’s this name that’s used by the formatter to write the data:</P>
<P class=Body style="MARGIN: 0in 0in 0pt"><o:p>&nbsp;</o:p></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><FONT size=2><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">&lt;</SPAN><SPAN style="COLOR: maroon; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">SOAP-ENV:Envelope</SPAN><SPAN style="COLOR: fuchsia; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"> </SPAN><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">...<SPAN style="COLOR: blue">&gt;<o:p></o:p></SPAN></SPAN></FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><FONT size=2><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">&lt;</SPAN><SPAN style="COLOR: maroon; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">SOAP-ENV:Body</SPAN><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">&gt;<o:p></o:p></SPAN></FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><FONT size=2><SPAN lang=PL style="COLOR: blue; FONT-FAMILY: 'Courier New'; mso-ansi-language: PL; mso-bidi-font-family: 'Courier New'">&lt;</SPAN><SPAN lang=PL style="COLOR: maroon; FONT-FAMILY: 'Courier New'; mso-ansi-language: PL; mso-bidi-font-family: 'Courier New'">a1:Form1_x002B_MyData</SPAN><SPAN lang=PL style="COLOR: fuchsia; FONT-FAMILY: 'Courier New'; mso-ansi-language: PL; mso-bidi-font-family: 'Courier New'"> </SPAN><SPAN lang=PL style="COLOR: red; FONT-FAMILY: 'Courier New'; mso-ansi-language: PL; mso-bidi-font-family: 'Courier New'">id</SPAN><SPAN lang=PL style="COLOR: blue; FONT-FAMILY: 'Courier New'; mso-ansi-language: PL; mso-bidi-font-family: 'Courier New'">="ref-1"</SPAN><SPAN lang=PL style="COLOR: maroon; FONT-FAMILY: 'Courier New'; mso-ansi-language: PL; mso-bidi-font-family: 'Courier New'"> </SPAN><SPAN lang=PL style="FONT-FAMILY: 'Courier New'; mso-ansi-language: PL; mso-bidi-font-family: 'Courier New'">...<SPAN style="COLOR: blue">&gt;<o:p></o:p></SPAN></SPAN></FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><FONT size=2><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">&lt;</SPAN><B style="mso-bidi-font-weight: normal"><SPAN style="COLOR: maroon; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">MyString</SPAN></B><SPAN style="COLOR: fuchsia; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"> </SPAN><SPAN style="COLOR: red; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">id</SPAN><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">="ref-3"&gt;</SPAN><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">Wahoo!<SPAN style="COLOR: blue">&lt;/</SPAN><SPAN style="COLOR: maroon">s</SPAN><SPAN style="COLOR: blue">&gt;<o:p></o:p></SPAN></SPAN></FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><FONT size=2><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">&lt;/</SPAN><SPAN style="COLOR: maroon; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">a1:Form1_x002B_MyData</SPAN><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">&gt;<o:p></o:p></SPAN></FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><FONT size=2><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">&lt;/</SPAN><SPAN style="COLOR: maroon; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">SOAP-ENV:Body</SPAN><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">&gt;<o:p></o:p></SPAN></FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><FONT size=2><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">&lt;/</SPAN><SPAN style="COLOR: maroon; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">SOAP-ENV:Envelope</SPAN><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">&gt;<o:p></o:p></SPAN></FONT></P>
<P class=Body style="MARGIN: 0in 0in 0pt"><o:p>&nbsp;</o:p></P>
<P class=Body style="MARGIN: 0in 0in 0pt">Deserialization happens with the special constructor that also takes a serialization info and a context state, this time to pull the data out. The SerializationInfo class provides several methods for pulling out typed data. For built-in types, the specific method, like GetString, can be used. For general types, the GetValue method can be used. For example, the following two lines of code are equivalent, with the latter the only choice for custom types:</P>
<P class=Body style="MARGIN: 0in 0in 0pt"><o:p>&nbsp;</o:p></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><FONT size=2><SPAN style="COLOR: black; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">s</SPAN><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"> = <SPAN style="COLOR: black">info</SPAN>.<SPAN style="COLOR: black">GetString</SPAN>("MyString");<o:p></o:p></SPAN></FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><FONT size=2><B style="mso-bidi-font-weight: normal"><SPAN style="COLOR: black; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">s</SPAN></B><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"> = (<SPAN style="COLOR: blue">string</SPAN>)<SPAN style="COLOR: black">info</SPAN>.<SPAN style="COLOR: black">GetValue</SPAN>("MyString", <SPAN style="COLOR: blue">typeof</SPAN>(<SPAN style="COLOR: blue">string</SPAN>));<o:p></o:p></SPAN></B></FONT></P>
<P class=HD style="MARGIN: 0.25in 0in 4pt"><STRONG>Data Versioning</STRONG></P>
<P class=Body style="MARGIN: 0in 0in 0pt">While the types that hold the data are always subject to the .NET rules of versioning, that doesn’t really help you when it comes to reading and writing old versions of the data using new versions of the object. To support that, all you can do is write a version ID into the stream as part of the implementation of ISerializable:</P>
<P class=Body style="MARGIN: 0in 0in 0pt"><o:p>&nbsp;</o:p></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2>[<SPAN style="COLOR: black">SerializableAttribute</SPAN>]<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><FONT size=2><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">class</SPAN><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"> <SPAN style="COLOR: black">MyData</SPAN> : <B style="mso-bidi-font-weight: normal"><SPAN style="COLOR: black">ISerializable</SPAN> </B>{<o:p></o:p></SPAN></FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">string</SPAN> <SPAN style="COLOR: black">s</SPAN> = "Wahoo!";<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">int</SPAN> <SPAN style="COLOR: black">n</SPAN> = 6;<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: black">ArrayList</SPAN> <SPAN style="COLOR: black">oldStrings</SPAN> = <SPAN style="COLOR: blue">new</SPAN> <SPAN style="COLOR: black">ArrayList</SPAN>(); <SPAN style="COLOR: green">// v2.0 addition<o:p></o:p></SPAN></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">static</SPAN> <SPAN style="COLOR: blue">string</SPAN> <SPAN style="COLOR: black">version</SPAN> = "2.0";<o:p></o:p></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>...<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><FONT size=2><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">#region</SPAN><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"> Implementation of ISerializable<o:p></o:p></SPAN></FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: black">MyData</SPAN>(<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: black">SerializationInfo</SPAN> <SPAN style="COLOR: black">info</SPAN>, <SPAN style="COLOR: black">StreamingContext</SPAN> <SPAN style="COLOR: black">context</SPAN>) {<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: green">// Read the data based on the version<o:p></o:p></SPAN></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><FONT size=2><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN></SPAN></B><B style="mso-bidi-font-weight: normal"><SPAN lang=SV style="COLOR: blue; FONT-FAMILY: 'Courier New'; mso-ansi-language: SV; mso-bidi-font-family: 'Courier New'">string</SPAN></B><B style="mso-bidi-font-weight: normal"><SPAN lang=SV style="FONT-FAMILY: 'Courier New'; mso-ansi-language: SV; mso-bidi-font-family: 'Courier New'"> <SPAN style="COLOR: black">version</SPAN> = <SPAN style="COLOR: black">info</SPAN>.<SPAN style="COLOR: black">GetString</SPAN>("Version");<o:p></o:p></SPAN></B></FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><FONT size=2><B style="mso-bidi-font-weight: normal"><SPAN lang=SV style="FONT-FAMILY: 'Courier New'; mso-ansi-language: SV; mso-bidi-font-family: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN></SPAN></B><B style="mso-bidi-font-weight: normal"><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">switch</SPAN></B><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">( <SPAN style="COLOR: black">version</SPAN> ) {<o:p></o:p></SPAN></B></FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: blue">case</SPAN> "1.0":<o:p></o:p></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: black">s</SPAN> = <SPAN style="COLOR: black">info</SPAN>.<SPAN style="COLOR: black">GetString</SPAN>("MyString");<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: black">n</SPAN> = <SPAN style="COLOR: black">s</SPAN>.<SPAN style="COLOR: black">Length</SPAN>;<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: blue">break</SPAN>;<o:p></o:p></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><o:p><FONT size=2>&nbsp;</FONT></o:p></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: blue">case</SPAN> "2.0":<o:p></o:p></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: black">s</SPAN> = <SPAN style="COLOR: black">info</SPAN>.<SPAN style="COLOR: black">GetString</SPAN>("MyString");<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN style="COLOR: black">n</SPAN> = <SPAN style="COLOR: black">s</SPAN>.<SPAN style="COLOR: black">Length</SPAN>;<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: black">oldStrings</SPAN> =<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>(<SPAN style="COLOR: black">ArrayList</SPAN>)<SPAN style="COLOR: black">info</SPAN>.<SPAN style="COLOR: black">GetValue</SPAN>("OldStrings", <SPAN style="COLOR: blue">typeof</SPAN>(<SPAN style="COLOR: black">ArrayList</SPAN>));<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: blue">break</SPAN>;<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>}<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>}<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><o:p><FONT size=2>&nbsp;</FONT></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: blue">void</SPAN> <SPAN style="COLOR: black">GetObjectData</SPAN>(<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: black">SerializationInfo</SPAN> <SPAN style="COLOR: black">info</SPAN>, <SPAN style="COLOR: black">StreamingContext</SPAN> <SPAN style="COLOR: black">context</SPAN>) {<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: green">// Tag the data with a version<o:p></o:p></SPAN></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp;</SPAN><SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN><SPAN style="COLOR: black">info</SPAN>.<SPAN style="COLOR: black">AddValue</SPAN>("Version", <SPAN style="COLOR: black">version</SPAN>);<o:p></o:p></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: black">info</SPAN>.<SPAN style="COLOR: black">AddValue</SPAN>("MyString", <SPAN style="COLOR: black">s</SPAN>);<o:p></o:p></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: black">info</SPAN>.<SPAN style="COLOR: black">AddValue</SPAN>("OldStrings", <SPAN style="COLOR: black">oldStrings</SPAN>);<o:p></o:p></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>}<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2>#endregion<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT size=2>}<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><o:p><FONT size=2>&nbsp;</FONT></o:p></SPAN></P>
<P class=Body style="MARGIN: 0in 0in 0pt">This implementation writes a Version string on all of the data it writes, then uses that string to decide what data to read back in at run-time. As the data in a class changes, marking it with a version provides a way to migrate old data forward (and even save to old versions, if you’d like).</P>
<P class=Body style="MARGIN: 0in 0in 0pt">&nbsp;</P>
<P class=Body style="MARGIN: 0in 0in 0pt">Notice also that the new hunk of data added was an ArrayList. Just like the simple types, the collection classes along with a large number of other classes in the .NET Framework can be serialized, making this model useful for all kinds of things, including user settings into isolated storage.</P>
<DIV style="mso-element: footnote-list">
<DIV id=ftn2 style="mso-element: footnote"><FONT face=Arial size=2>
<P class=HD style="MARGIN: 0.25in 0in 4pt"><FONT face="Times New Roman" size=3><STRONG>Settings &amp; Streams</STRONG></FONT></P>
<P class=Body style="MARGIN: 0in 0in 0pt"><FONT face="Times New Roman" size=3>The combination of <A href="Whatsthebestwaytomaintain.htm">an isolated storage stream</A> and formatters makes for a great way to store user settings, like the state of a form when it's closed and opened:</FONT></P>
<P class=Body style="MARGIN: 0in 0in 0pt"><o:p><FONT face="Times New Roman" size=3>&nbsp;</FONT></o:p></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN><STRONG>using <SPAN style="COLOR: black">System</SPAN>.<SPAN style="COLOR: black">Runtime</SPAN>.<SPAN style="COLOR: black">Serialization</SPAN>;<o:p></o:p></STRONG></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN><STRONG>using <SPAN style="COLOR: black">System</SPAN>.<SPAN style="COLOR: black">Runtime</SPAN>.<SPAN style="COLOR: black">Serialization</SPAN>.<SPAN style="COLOR: black">Formatters</SPAN>;<o:p></o:p></STRONG></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN><STRONG>using <SPAN style="COLOR: black">System</SPAN>.<SPAN style="COLOR: black">Runtime</SPAN>.<SPAN style="COLOR: black">Serialization</SPAN>.<SPAN style="COLOR: black">Formatters</SPAN>.<SPAN style="COLOR: black">Soap</SPAN>;</STRONG></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN><STRONG>using System.IO;</STRONG></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN><STRONG>using <SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: Arial; mso-ansi-language: EN-US; mso-fareast-font-family: 'Times New Roman'; mso-fareast-language: EN-US; mso-bidi-language: AR-SA; mso-bidi-font-family: 'Times New Roman'">System.IO.IsolatedStorage;</SPAN></STRONG></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">...<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="COLOR: green; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><STRONG>// Custom type to manage serializable form data<o:p></o:p></STRONG></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><STRONG>[<SPAN style="COLOR: black">SerializableAttribute</SPAN>]<o:p></o:p></STRONG></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN><STRONG>class <SPAN style="COLOR: black">FormData</SPAN> {<o:p></o:p></STRONG></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><STRONG><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: black">Point</SPAN> <SPAN style="COLOR: black">Location</SPAN>;<o:p></o:p></STRONG></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><STRONG><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: black">Size</SPAN> <SPAN style="COLOR: black">ClientSize</SPAN>;<o:p></o:p></STRONG></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><STRONG><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: black">FormWindowState</SPAN> <SPAN style="COLOR: black">WindowState</SPAN>;<o:p></o:p></STRONG></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><o:p><STRONG>&nbsp;</STRONG></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><STRONG><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">public</SPAN> <SPAN style="COLOR: black">FormData</SPAN>(<SPAN style="COLOR: black">Form</SPAN> <SPAN style="COLOR: black">form</SPAN>) {<o:p></o:p></STRONG></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><STRONG><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: blue">this</SPAN>.<SPAN style="COLOR: black">Location</SPAN> = <SPAN style="COLOR: black">form</SPAN>.<SPAN style="COLOR: black">Location</SPAN>;<o:p></o:p></STRONG></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><STRONG><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: blue">this</SPAN>.<SPAN style="COLOR: black">ClientSize</SPAN> = <SPAN style="COLOR: black">form</SPAN>.<SPAN style="COLOR: black">ClientSize</SPAN>;<o:p></o:p></STRONG></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><STRONG><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: blue">this</SPAN>.<SPAN style="COLOR: black">WindowState</SPAN> = <SPAN style="COLOR: black">form</SPAN>.<SPAN style="COLOR: black">WindowState</SPAN>;<o:p></o:p></STRONG></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><STRONG><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>}<o:p></o:p></STRONG></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><STRONG>}<o:p></o:p></STRONG></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><o:p>&nbsp;</o:p></SPAN></P><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">void</SPAN><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT color=#000000> <SPAN style="COLOR: black">MainForm_Closing</SPAN>(</FONT><SPAN style="COLOR: blue">object</SPAN><FONT color=#000000> <SPAN style="COLOR: black">sender</SPAN>, <SPAN style="COLOR: black">CancelEventArgs</SPAN> <SPAN style="COLOR: black">e</SPAN>) {<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><SPAN style="mso-spacerun: yes"><FONT color=#000000>&nbsp; </FONT></SPAN><SPAN style="COLOR: green">// Save the form's position before it closes<o:p></o:p></SPAN></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT color=#000000><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: black">IsolatedStorageFile</SPAN> <SPAN style="COLOR: black">store</SPAN> =<o:p></o:p></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT color=#000000><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: black">IsolatedStorageFile</SPAN>.<SPAN style="COLOR: black">GetUserStoreForAssembly</SPAN>();<o:p></o:p></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><SPAN style="mso-spacerun: yes"><FONT color=#000000>&nbsp; </FONT></SPAN><SPAN style="COLOR: blue">using</SPAN><FONT color=#000000>( <SPAN style="COLOR: black">Stream</SPAN> <SPAN style="COLOR: black">stream</SPAN> =<o:p></o:p></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><SPAN style="mso-spacerun: yes"><FONT color=#000000>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT></SPAN><SPAN style="COLOR: blue">new</SPAN><FONT color=#000000> <SPAN style="COLOR: black">IsolatedStorageFileStream</SPAN>("MainForm.txt",<o:p></o:p></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT color=#000000><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: black">FileMode</SPAN>.<SPAN style="COLOR: black">Create</SPAN>,<o:p></o:p></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT color=#000000><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: black">store</SPAN>) )</FONT><SPAN style="COLOR: blue"> </SPAN><FONT color=#000000>{<o:p></o:p></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"></SPAN><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: green">// Restore the window state to save location and<o:p></o:p></SPAN></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: green">// client size at restored state<o:p></o:p></SPAN></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: black">FormWindowState</SPAN> <SPAN style="COLOR: black">state</SPAN> = <SPAN style="COLOR: blue">this</SPAN>.<SPAN style="COLOR: black">WindowState</SPAN>;<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: blue">this</SPAN>.<SPAN style="COLOR: black">WindowState</SPAN> = <SPAN style="COLOR: black">FormWindowState</SPAN>.<SPAN style="COLOR: black">Normal</SPAN>;<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><o:p>&nbsp;</o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><STRONG><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: green">// Serialize custom FormData object<o:p></o:p></SPAN></STRONG></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><STRONG><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: black">IFormatter</SPAN> <SPAN style="COLOR: black">formatter</SPAN> = <SPAN style="COLOR: blue">new</SPAN> <SPAN style="COLOR: black">SoapFormatter</SPAN>();<o:p></o:p></STRONG></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><STRONG><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: black">formatter</SPAN>.<SPAN style="COLOR: black">Serialize</SPAN>(<SPAN style="COLOR: black">stream</SPAN>, <SPAN style="COLOR: blue">new</SPAN> <SPAN style="COLOR: black">FormData</SPAN>(<SPAN style="COLOR: blue">this</SPAN>));<o:p></o:p></STRONG></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><STRONG><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>}<o:p></o:p></STRONG></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">}<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><o:p>&nbsp;</o:p></SPAN></P><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="COLOR: blue; FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">void</SPAN><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT color=#000000> <SPAN style="COLOR: black">MainForm_Load</SPAN>(</FONT><SPAN style="COLOR: blue">object</SPAN><FONT color=#000000> <SPAN style="COLOR: black">sender</SPAN>, <SPAN style="COLOR: black">EventArgs</SPAN> <SPAN style="COLOR: black">e</SPAN>) {<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><SPAN style="mso-spacerun: yes"><FONT color=#000000>&nbsp; </FONT></SPAN><SPAN style="COLOR: green">// Restore the form's position<o:p></o:p></SPAN></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><SPAN style="mso-spacerun: yes"><FONT color=#000000>&nbsp; </FONT></SPAN><SPAN style="COLOR: blue">try</SPAN><FONT color=#000000> {<o:p></o:p></FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT color=#000000><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: black">IsolatedStorageFile</SPAN> <SPAN style="COLOR: black">store</SPAN> =<o:p></o:p></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT color=#000000><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: black">IsolatedStorageFile</SPAN>.<SPAN style="COLOR: black">GetUserStoreForAssembly</SPAN>();<o:p></o:p></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><SPAN style="mso-spacerun: yes"><FONT color=#000000>&nbsp;&nbsp;&nbsp; </FONT></SPAN><SPAN style="COLOR: blue">using</SPAN><FONT color=#000000>( <SPAN style="COLOR: black">Stream</SPAN> <SPAN style="COLOR: black">stream</SPAN> =<o:p></o:p></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><SPAN style="mso-spacerun: yes"><FONT color=#000000>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT></SPAN><SPAN style="COLOR: blue">new</SPAN><FONT color=#000000> <SPAN style="COLOR: black">IsolatedStorageFileStream</SPAN>("MainForm.txt",<o:p></o:p></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT color=#000000><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: black">FileMode</SPAN>.<SPAN style="COLOR: black">Open</SPAN>,<o:p></o:p></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><B style="mso-bidi-font-weight: normal"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><FONT color=#000000><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN style="COLOR: black">store</SPAN>) )</FONT><SPAN style="COLOR: blue"> </SPAN><FONT color=#000000>{<o:p></o:p></FONT></SPAN></B></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"></SPAN><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: green">// Don't let the form's position be set automatically<o:p></o:p></SPAN></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: blue">this</SPAN>.<SPAN style="COLOR: black">StartPosition</SPAN> = <SPAN style="COLOR: black">FormStartPosition</SPAN>.<SPAN style="COLOR: black">Manual</SPAN>;<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><o:p>&nbsp;</o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><STRONG><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: green">// Deserialize custom FormData object<o:p></o:p></SPAN></STRONG></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><STRONG><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: black">IFormatter</SPAN> <SPAN style="COLOR: black">formatter</SPAN> = <SPAN style="COLOR: blue">new</SPAN> <SPAN style="COLOR: black">SoapFormatter</SPAN>();<o:p></o:p></STRONG></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><STRONG><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: black">FormData</SPAN> <SPAN style="COLOR: black">data</SPAN> = (<SPAN style="COLOR: black">FormData</SPAN>)<SPAN style="COLOR: black">formatter</SPAN>.<SPAN style="COLOR: black">Deserialize</SPAN>(<SPAN style="COLOR: black">stream</SPAN>);<o:p></o:p></STRONG></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><o:p><STRONG>&nbsp;</STRONG></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><STRONG><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: green">// Set data from FormData object<o:p></o:p></SPAN></STRONG></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><STRONG><SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;</SPAN><SPAN style="COLOR: blue">this</SPAN>.<SPAN style="COLOR: black">Location</SPAN> = <SPAN style="COLOR: black">data</SPAN>.<SPAN style="COLOR: black">Location</SPAN>;<o:p></o:p></STRONG></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><STRONG><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: blue">this</SPAN>.<SPAN style="COLOR: black">ClientSize</SPAN> = <SPAN style="COLOR: black">data</SPAN>.<SPAN style="COLOR: black">ClientSize</SPAN>;<o:p></o:p></STRONG></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><STRONG><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: blue">this</SPAN>.<SPAN style="COLOR: black">WindowState</SPAN> = <SPAN style="COLOR: black">data</SPAN>.<SPAN style="COLOR: black">WindowState</SPAN>;<o:p></o:p></STRONG></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><STRONG><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>}<o:p></o:p></STRONG></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>}<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: green">// Don't let missing settings scare the user<o:p></o:p></SPAN></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: blue">catch</SPAN>( <SPAN style="COLOR: black">Exception</SPAN> <SPAN style="COLOR: black">ex</SPAN> ) {<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: black">MessageBox</SPAN>.<SPAN style="COLOR: black">Show</SPAN>(<SPAN style="COLOR: black">ex</SPAN>.<SPAN style="COLOR: black">Message</SPAN>, <SPAN style="COLOR: black">ex</SPAN>.<SPAN style="COLOR: black">GetType</SPAN>().<SPAN style="COLOR: black">Name</SPAN>);<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>}<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; mso-layout-grid-align: none"><SPAN style="FONT-FAMILY: 'Courier New'; mso-bidi-font-family: 'Courier New'">}<o:p></o:p></SPAN></P>
<P class=Body style="MARGIN: 0in 0in 0pt"><o:p><FONT face="Times New Roman" size=3>&nbsp;</FONT></o:p></P>
<P class=Body style="MARGIN: 0in 0in 0pt"><FONT face="Times New Roman" size=3>To have something to serialize, we’ve got a custom type called FormData which keeps track of the location, client size and window state. When it’s time to save the form data, the code creates an instance of the new type and then hands it to the formatter, along with the file stream opened up in the special folder. Likewise, when loading, we use a formatter to deserialized the form data and use it to restore the form.</FONT></P><FONT face="Times New Roman" size=3>
<P class=HD style="MARGIN: 0.25in 0in 4pt"><FONT face="Times New Roman" size=3><STRONG>How Did I Figure This Out?</STRONG></FONT></P>
<P class=HD style="MARGIN: 0.25in 0in 4pt">Streams have been a common serialization abstraction since C++ and COM. The streams in .NET are an extension and simplification of those. It was the history I already knew along with some research into what was different about streams in .NET from what I was familiar with that made it pretty obvious what the .NET serialization story was. I find that the more you dig into any one technology, e.g. C++ streams, the easier it is to figure out how the next new technology is when it comes along. Building on a base of knowledge, it's just a matter of figuring out what was different about .NET streams. I didn't have to learn anything from scratch.</P></FONT></FONT></DIV></DIV></p>
  		<p style="MARGIN-RIGHT: 0px">
			<font size="2"><SPAN 
style="FONT-SIZE: 12pt; FONT-FAMILY: 'Times New Roman'; mso-fareast-font-family: 'Times New Roman'; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA">
		</p>
<H1>Feedback</H1>
<P><A href="mailto:askthewonk@sellsbrothers.com?subject=Feedback on 'How can I use serialization in conjuction with Isolated Storage?'">I have 
feedback on this Ask The Wonk answer</A></P></SPAN></FONT></body>
</html>

