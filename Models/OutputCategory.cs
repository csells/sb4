//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace sb4.Models
{
    public partial class OutputCategory
    {
        #region Primitive Properties
    
        public virtual int Id
        {
            get;
            set;
        }
    
        public virtual int SiteId
        {
            get { return _siteId; }
            set
            {
                if (_siteId != value)
                {
                    if (Site != null && Site.Id != value)
                    {
                        Site = null;
                    }
                    _siteId = value;
                }
            }
        }
        private int _siteId;
    
        public virtual string Name
        {
            get;
            set;
        }
    
        public virtual short Order
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual Site Site
        {
            get { return _site; }
            set
            {
                if (!ReferenceEquals(_site, value))
                {
                    var previousValue = _site;
                    _site = value;
                    FixupSite(previousValue);
                }
            }
        }
        private Site _site;
    
        public virtual ICollection<OutputItem> OutputItems
        {
            get
            {
                if (_outputItems == null)
                {
                    var newCollection = new FixupCollection<OutputItem>();
                    newCollection.CollectionChanged += FixupOutputItems;
                    _outputItems = newCollection;
                }
                return _outputItems;
            }
            set
            {
                if (!ReferenceEquals(_outputItems, value))
                {
                    var previousValue = _outputItems as FixupCollection<OutputItem>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupOutputItems;
                    }
                    _outputItems = value;
                    var newValue = value as FixupCollection<OutputItem>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupOutputItems;
                    }
                }
            }
        }
        private ICollection<OutputItem> _outputItems;

        #endregion
        #region Association Fixup
    
        private void FixupSite(Site previousValue)
        {
            if (previousValue != null && previousValue.OutputCategories.Contains(this))
            {
                previousValue.OutputCategories.Remove(this);
            }
    
            if (Site != null)
            {
                if (!Site.OutputCategories.Contains(this))
                {
                    Site.OutputCategories.Add(this);
                }
                if (SiteId != Site.Id)
                {
                    SiteId = Site.Id;
                }
            }
        }
    
        private void FixupOutputItems(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (OutputItem item in e.NewItems)
                {
                    item.OutputCategory = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (OutputItem item in e.OldItems)
                {
                    if (ReferenceEquals(item.OutputCategory, this))
                    {
                        item.OutputCategory = null;
                    }
                }
            }
        }

        #endregion
    }
}
