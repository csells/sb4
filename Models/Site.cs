//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace sb4.Models
{
    public partial class Site
    {
        #region Primitive Properties
    
        public virtual int Id
        {
            get;
            set;
        }
    
        public virtual string BriefAbout
        {
            get;
            set;
        }
    
        public virtual string Title
        {
            get;
            set;
        }
    
        public virtual string ContactEmail
        {
            get;
            set;
        }
    
        public virtual string CopyrightNotice
        {
            get;
            set;
        }
    
        public virtual short PageSize
        {
            get;
            set;
        }
    
        public virtual string ContactName
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual ICollection<Badge> Badges
        {
            get
            {
                if (_badges == null)
                {
                    var newCollection = new FixupCollection<Badge>();
                    newCollection.CollectionChanged += FixupBadges;
                    _badges = newCollection;
                }
                return _badges;
            }
            set
            {
                if (!ReferenceEquals(_badges, value))
                {
                    var previousValue = _badges as FixupCollection<Badge>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupBadges;
                    }
                    _badges = value;
                    var newValue = value as FixupCollection<Badge>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupBadges;
                    }
                }
            }
        }
        private ICollection<Badge> _badges;
    
        public virtual ICollection<LandingZone> LandingZones
        {
            get
            {
                if (_landingZones == null)
                {
                    var newCollection = new FixupCollection<LandingZone>();
                    newCollection.CollectionChanged += FixupLandingZones;
                    _landingZones = newCollection;
                }
                return _landingZones;
            }
            set
            {
                if (!ReferenceEquals(_landingZones, value))
                {
                    var previousValue = _landingZones as FixupCollection<LandingZone>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupLandingZones;
                    }
                    _landingZones = value;
                    var newValue = value as FixupCollection<LandingZone>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupLandingZones;
                    }
                }
            }
        }
        private ICollection<LandingZone> _landingZones;
    
        public virtual ICollection<OutputCategory> OutputCategories
        {
            get
            {
                if (_outputCategories == null)
                {
                    var newCollection = new FixupCollection<OutputCategory>();
                    newCollection.CollectionChanged += FixupOutputCategories;
                    _outputCategories = newCollection;
                }
                return _outputCategories;
            }
            set
            {
                if (!ReferenceEquals(_outputCategories, value))
                {
                    var previousValue = _outputCategories as FixupCollection<OutputCategory>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupOutputCategories;
                    }
                    _outputCategories = value;
                    var newValue = value as FixupCollection<OutputCategory>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupOutputCategories;
                    }
                }
            }
        }
        private ICollection<OutputCategory> _outputCategories;
    
        public virtual ICollection<OutputItem> OutputItems
        {
            get
            {
                if (_outputItems == null)
                {
                    var newCollection = new FixupCollection<OutputItem>();
                    newCollection.CollectionChanged += FixupOutputItems;
                    _outputItems = newCollection;
                }
                return _outputItems;
            }
            set
            {
                if (!ReferenceEquals(_outputItems, value))
                {
                    var previousValue = _outputItems as FixupCollection<OutputItem>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupOutputItems;
                    }
                    _outputItems = value;
                    var newValue = value as FixupCollection<OutputItem>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupOutputItems;
                    }
                }
            }
        }
        private ICollection<OutputItem> _outputItems;
    
        public virtual ICollection<PostCategory> PostCategories
        {
            get
            {
                if (_postCategories == null)
                {
                    var newCollection = new FixupCollection<PostCategory>();
                    newCollection.CollectionChanged += FixupPostCategories;
                    _postCategories = newCollection;
                }
                return _postCategories;
            }
            set
            {
                if (!ReferenceEquals(_postCategories, value))
                {
                    var previousValue = _postCategories as FixupCollection<PostCategory>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupPostCategories;
                    }
                    _postCategories = value;
                    var newValue = value as FixupCollection<PostCategory>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupPostCategories;
                    }
                }
            }
        }
        private ICollection<PostCategory> _postCategories;
    
        public virtual ICollection<Ad> Ads
        {
            get
            {
                if (_ads == null)
                {
                    var newCollection = new FixupCollection<Ad>();
                    newCollection.CollectionChanged += FixupAds;
                    _ads = newCollection;
                }
                return _ads;
            }
            set
            {
                if (!ReferenceEquals(_ads, value))
                {
                    var previousValue = _ads as FixupCollection<Ad>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupAds;
                    }
                    _ads = value;
                    var newValue = value as FixupCollection<Ad>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupAds;
                    }
                }
            }
        }
        private ICollection<Ad> _ads;

        #endregion
        #region Association Fixup
    
        private void FixupBadges(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Badge item in e.NewItems)
                {
                    item.Site = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Badge item in e.OldItems)
                {
                    if (ReferenceEquals(item.Site, this))
                    {
                        item.Site = null;
                    }
                }
            }
        }
    
        private void FixupLandingZones(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (LandingZone item in e.NewItems)
                {
                    item.Site = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (LandingZone item in e.OldItems)
                {
                    if (ReferenceEquals(item.Site, this))
                    {
                        item.Site = null;
                    }
                }
            }
        }
    
        private void FixupOutputCategories(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (OutputCategory item in e.NewItems)
                {
                    item.Site = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (OutputCategory item in e.OldItems)
                {
                    if (ReferenceEquals(item.Site, this))
                    {
                        item.Site = null;
                    }
                }
            }
        }
    
        private void FixupOutputItems(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (OutputItem item in e.NewItems)
                {
                    item.Site = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (OutputItem item in e.OldItems)
                {
                    if (ReferenceEquals(item.Site, this))
                    {
                        item.Site = null;
                    }
                }
            }
        }
    
        private void FixupPostCategories(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (PostCategory item in e.NewItems)
                {
                    item.Site = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (PostCategory item in e.OldItems)
                {
                    if (ReferenceEquals(item.Site, this))
                    {
                        item.Site = null;
                    }
                }
            }
        }
    
        private void FixupAds(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Ad item in e.NewItems)
                {
                    item.Site = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Ad item in e.OldItems)
                {
                    if (ReferenceEquals(item.Site, this))
                    {
                        item.Site = null;
                    }
                }
            }
        }

        #endregion
    }
}
